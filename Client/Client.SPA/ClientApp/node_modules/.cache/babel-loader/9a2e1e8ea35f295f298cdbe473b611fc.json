{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducers = void 0;\n\nvar toolkit_1 = require(\"@reduxjs/toolkit\");\n\nvar WeatherForecasts = require(\"./WeatherForecasts\");\n\nvar Counter = require(\"./Counter\");\n\nvar authReducer_1 = require(\"./reducers/authReducer\");\n\nvar commonReducer_1 = require(\"./reducers/commonReducer\");\n\nvar bankReducer_1 = require(\"./reducers/bankReducer\"); // Whenever an action is dispatched, Redux will update each top-level application state property using\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\n// acts on the corresponding ApplicationState property type.\n\n\nexports.reducers = {\n  counter: Counter.reducer,\n  weatherForecasts: WeatherForecasts.reducer,\n  common: commonReducer_1.default,\n  auth: authReducer_1.default,\n  //location: locationReducer,\n  bank: bankReducer_1.default //upload: uploadReducer\n\n};\nvar store = toolkit_1.configureStore({\n  reducer: {\n    auth: authReducer_1.default,\n    common: commonReducer_1.default,\n    bank: bankReducer_1.default\n  }\n});","map":{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,wBAAA,CAAA,C,CAYA;AACA;AACA;;;AACa,OAAA,CAAA,QAAA,GAAW;AACpB,EAAA,OAAO,EAAE,OAAO,CAAC,OADG;AAEpB,EAAA,gBAAgB,EAAE,gBAAgB,CAAC,OAFf;AAIpB,EAAA,MAAM,EAAE,eAAA,CAAA,OAJY;AAKpB,EAAA,IAAI,EAAE,aAAA,CAAA,OALc;AAMpB;AACA,EAAA,IAAI,EAAE,aAAA,CAAA,OAPc,CAQpB;;AARoB,CAAX;AAkBb,IAAM,KAAK,GAAG,SAAA,CAAA,cAAA,CAAe;AACzB,EAAA,OAAO,EAAE;AACL,IAAA,IAAI,EAAE,aAAA,CAAA,OADD;AAEL,IAAA,MAAM,EAAE,eAAA,CAAA,OAFH;AAGL,IAAA,IAAI,EAAE,aAAA,CAAA;AAHD;AADgB,CAAf,CAAd","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.reducers = void 0;\r\nvar toolkit_1 = require(\"@reduxjs/toolkit\");\r\nvar WeatherForecasts = require(\"./WeatherForecasts\");\r\nvar Counter = require(\"./Counter\");\r\nvar authReducer_1 = require(\"./reducers/authReducer\");\r\nvar commonReducer_1 = require(\"./reducers/commonReducer\");\r\nvar bankReducer_1 = require(\"./reducers/bankReducer\");\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexports.reducers = {\r\n    counter: Counter.reducer,\r\n    weatherForecasts: WeatherForecasts.reducer,\r\n    common: commonReducer_1.default,\r\n    auth: authReducer_1.default,\r\n    //location: locationReducer,\r\n    bank: bankReducer_1.default,\r\n    //upload: uploadReducer\r\n};\r\nvar store = toolkit_1.configureStore({\r\n    reducer: {\r\n        auth: authReducer_1.default,\r\n        common: commonReducer_1.default,\r\n        bank: bankReducer_1.default,\r\n    },\r\n});\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}