{"ast":null,"code":"import _slicedToArray from \"H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"H:\\\\Project\\\\Microservices\\\\MicroservicesSampleProject\\\\Client\\\\Client.SPA\\\\ClientApp\\\\src\\\\components\\\\Banks\\\\BankList\\\\BankList.tsx\",\n    _this = this;\n\nimport * as React from 'react';\nimport { useMemo, useState, useCallback, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as classes from './BankList.module.scss';\nimport BankItem from '../BankItem/BankItem';\nimport NoBank from '../NoBank/NoBank';\nimport * as actions from '../../../store/actions/bankActions';\nimport ListFooter from '../../UI/ListFooter/ListFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar pageCount = 10;\n; //interface DispatchProps {\n//    onSomeEvent: () => void,\n//    onChange: (pageIndex: number) => void\n//}\n\nvar BankList = function BankList() {\n  var _useSelector = useSelector(function (state) {\n    return {\n      banks: state.bank.banks,\n      banksCount: state.bank.count,\n      successfulOperation: state.common.successfulOperation,\n      loggedIn: state.auth.loggedIn\n    };\n  }),\n      banks = _useSelector.banks,\n      banksCount = _useSelector.banksCount,\n      successfulOperation = _useSelector.successfulOperation,\n      loggedIn = _useSelector.loggedIn;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      pageNo = _useState2[0],\n      setPageNo = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pagesCount = _useState4[0],\n      setPagesCount = _useState4[1];\n\n  useEffect(function () {\n    dispatch(actions.fetchBanks(pageNo, pageCount));\n  }, [pageNo, pageCount]);\n  useEffect(function () {\n    dispatch(actions.fetchBanksCount());\n  }, []);\n  useEffect(function () {\n    setPagesCount(Math.ceil(banksCount / pageCount));\n  }, [banksCount]);\n  useEffect(function () {\n    if (!!successfulOperation) {\n      refreshHandler();\n    }\n  }, [successfulOperation]);\n  var refreshHandler = useCallback(function () {\n    dispatch(actions.fetchBanks(pageNo, pageCount));\n    dispatch(actions.fetchBanksCount());\n    setPageNo(1);\n  }, []);\n  var changePageHandler = useCallback(function (no) {\n    setPageNo(no);\n  }, [setPageNo]);\n  var bankItems = useMemo(function () {\n    return banks === null || banks === void 0 ? void 0 : banks.map(function (bank) {\n      return /*#__PURE__*/_jsxDEV(BankItem, {\n        bank: bank\n      }, bank.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, _this);\n    });\n  }, [banks]);\n  var footerContent = useMemo(function () {\n    return /*#__PURE__*/_jsxDEV(ListFooter, {\n      listCount: banksCount,\n      pageNo: pageNo,\n      pagesCount: pagesCount,\n      onChangePage: changePageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, _this);\n  }, [banksCount, pageNo, pagesCount, changePageHandler]);\n  var listContent = (banks === null || banks === void 0 ? void 0 : banks.length) > 0 && banksCount > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: [bankItems, footerContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }, _this) : /*#__PURE__*/_jsxDEV(NoBank, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 15\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.BankList,\n    children: [listContent, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loggedIn && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-primary\",\n        to: \"/Banks/new\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 30\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: refreshHandler,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, _this);\n};\n\nexport default BankList;","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/components/Banks/BankList/BankList.tsx"],"names":["React","useMemo","useState","useCallback","useEffect","Link","useDispatch","useSelector","classes","BankItem","NoBank","actions","ListFooter","pageCount","BankList","state","banks","bank","banksCount","count","successfulOperation","common","loggedIn","auth","dispatch","pageNo","setPageNo","pagesCount","setPagesCount","fetchBanks","fetchBanksCount","Math","ceil","refreshHandler","changePageHandler","no","bankItems","map","id","footerContent","listContent","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { FC, useMemo, useState, useCallback, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport * as classes from './BankList.module.scss';\r\nimport BankItem from '../BankItem/BankItem';\r\nimport NoBank from '../NoBank/NoBank';\r\nimport * as actions from '../../../store/actions/bankActions';\r\nimport ListFooter from '../../UI/ListFooter/ListFooter';\r\nimport { Bank } from '../../../models/Bank.model';\r\nimport { AppState } from '../../../store';\r\n\r\nconst pageCount: number = 10;\r\n\r\ninterface StoreProps {\r\n    banks: Bank[],\r\n    banksCount: number,\r\n    successfulOperation: string,\r\n    loggedIn: boolean\r\n};\r\n\r\n//interface DispatchProps {\r\n//    onSomeEvent: () => void,\r\n//    onChange: (pageIndex: number) => void\r\n//}\r\n\r\nconst BankList: FC = () => {\r\n\r\n    const { banks, banksCount, successfulOperation, loggedIn }: StoreProps = useSelector((state: AppState) => ({\r\n        banks: state.bank.banks,\r\n        banksCount: state.bank.count,\r\n        successfulOperation: state.common.successfulOperation,\r\n        loggedIn: state.auth.loggedIn\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    const [pageNo, setPageNo] = useState(1);\r\n    const [pagesCount, setPagesCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.fetchBanks(pageNo, pageCount));\r\n    }, [pageNo, pageCount]);\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.fetchBanksCount());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPagesCount(Math.ceil(banksCount / pageCount));\r\n    }, [banksCount]);\r\n\r\n    useEffect(() => {\r\n        if (!!successfulOperation) {\r\n            refreshHandler();\r\n        }\r\n    }, [successfulOperation]);\r\n\r\n    const refreshHandler = useCallback(() => {\r\n        dispatch(actions.fetchBanks(pageNo, pageCount));\r\n        dispatch(actions.fetchBanksCount());\r\n        setPageNo(1);\r\n    }, []);\r\n\r\n    const changePageHandler = useCallback((no) => {\r\n        setPageNo(no);\r\n    }, [setPageNo]);\r\n\r\n    const bankItems = useMemo(() => {\r\n        return banks?.map((bank: Bank) =>\r\n            <BankItem key={bank.id} bank={bank} />);\r\n    }, [banks]);\r\n\r\n    const footerContent = useMemo(() => (\r\n        <ListFooter listCount={banksCount} pageNo={pageNo} pagesCount={pagesCount}\r\n            onChangePage={changePageHandler} />\r\n    ), [banksCount, pageNo, pagesCount, changePageHandler]);\r\n\r\n    const listContent = (\r\n        (banks?.length > 0 && banksCount > 0) ?\r\n            <div className=\"list-group\">\r\n                {bankItems}\r\n                {footerContent}\r\n            </div>\r\n            : <NoBank />\r\n    );\r\n\r\n    return (\r\n        <div className={classes.BankList}>\r\n            {listContent}\r\n            <div>\r\n                {loggedIn && <Link className=\"btn btn-primary\" to=\"/Banks/new\">Add</Link>}\r\n                <button className=\"btn btn-success\" onClick={refreshHandler}>Refresh</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BankList;"]},"metadata":{},"sourceType":"module"}