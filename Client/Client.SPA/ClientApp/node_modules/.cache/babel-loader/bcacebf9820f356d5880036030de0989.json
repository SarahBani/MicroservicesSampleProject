{"ast":null,"code":"import _objectSpread from \"H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from '../actions/bankActionTypes';\nvar initialState = {\n  banks: [],\n  count: 0,\n  selectedBank: null\n};\nexport var bankReducer = function bankReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SET_BANKS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        banks: action.banks\n      });\n\n    case actionTypes.RESET_BANKS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        banks: null,\n        count: 0\n      });\n\n    case actionTypes.SET_BANKS_COUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: action.count\n      });\n\n    case actionTypes.SET_BANK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedBank: action.bank\n      });\n\n    case actionTypes.CLEAR_SELECTED_BANK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedBank: null\n      });\n\n    default:\n      return state;\n  }\n};\nexport default bankReducer;","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/store/reducers/bankReducer.tsx"],"names":["actionTypes","initialState","banks","count","selectedBank","bankReducer","state","action","type","SET_BANKS","RESET_BANKS","SET_BANKS_COUNT","SET_BANK","bank","CLEAR_SELECTED_BANK"],"mappings":";AACA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAQA,IAAMC,YAAmB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,KAAK,EAAE,CAFiB;AAGxBC,EAAAA,YAAY,EAAE;AAHU,CAA5B;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmD;AAAA,MAAlDC,KAAkD,uEAAnCL,YAAmC;AAAA,MAArBM,MAAqB;;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,SAAjB;AACI,6CACOH,KADP;AAEIJ,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAFlB;;AAIJ,SAAKF,WAAW,CAACU,WAAjB;AACI,6CACOJ,KADP;AAEIJ,QAAAA,KAAK,EAAE,IAFX;AAGIC,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKH,WAAW,CAACW,eAAjB;AACI,6CACOL,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFlB;;AAIJ,SAAKH,WAAW,CAACY,QAAjB;AACI,6CACON,KADP;AAEIF,QAAAA,YAAY,EAAEG,MAAM,CAACM;AAFzB;;AAIJ,SAAKb,WAAW,CAACc,mBAAjB;AACI,6CACOR,KADP;AAEIF,QAAAA,YAAY,EAAE;AAFlB;;AAIJ;AACI,aAAOE,KAAP;AA5BR;AA8BH,CA/BM;AAiCP,eAAeD,WAAf","sourcesContent":["import { Bank } from '../../models/Bank.model';\r\nimport * as actionTypes from '../actions/bankActionTypes';\r\n\r\nexport interface State {\r\n    banks: Bank[],\r\n    count: number,\r\n    selectedBank: Bank | null\r\n}\r\n\r\nconst initialState: State = {\r\n    banks: [],\r\n    count: 0,\r\n    selectedBank: null\r\n};\r\n\r\nexport const bankReducer = (state: State = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_BANKS:\r\n            return {\r\n                ...state,\r\n                banks: action.banks\r\n            };\r\n        case actionTypes.RESET_BANKS: \r\n            return {\r\n                ...state,\r\n                banks: null,\r\n                count: 0\r\n            };\r\n        case actionTypes.SET_BANKS_COUNT:\r\n            return {\r\n                ...state,\r\n                count: action.count\r\n            };\r\n        case actionTypes.SET_BANK:\r\n            return {\r\n                ...state,\r\n                selectedBank: action.bank\r\n            };\r\n        case actionTypes.CLEAR_SELECTED_BANK:\r\n            return {\r\n                ...state,\r\n                selectedBank: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default bankReducer;"]},"metadata":{},"sourceType":"module"}