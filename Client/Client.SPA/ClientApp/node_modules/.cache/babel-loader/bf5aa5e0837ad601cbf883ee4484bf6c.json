{"ast":null,"code":"\"use strict\";\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.watchBank = exports.watchAuth = void 0;\n\nvar effects_1 = require(\"redux-saga/effects\");\n\nvar auth_1 = require(\"./auth\"); //import { fetchCountriesSaga, selectCountrySaga, selectCitySaga } from './location';\n\n\nvar bank_1 = require(\"./bank\");\n\nvar authActionTypes = require(\"../actions/authActionTypes\"); //import * as locationActionTypes from '../actions/locationActionTypes';\n\n\nvar bankActionTypes = require(\"../actions/bankActionTypes\");\n\nfunction watchAuth() {\n  var payload, bgSyncTask;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        return [4\n        /*yield*/\n        , effects_1.all([effects_1.takeLatest(authActionTypes.AUTO_SIGN_IN, auth_1.autoSignInSaga), effects_1.takeLatest(authActionTypes.SIGN_IN_START, auth_1.signInSaga), effects_1.takeLatest(authActionTypes.SIGN_OUT, auth_1.signOutSaga) //takeLatest(authActionTypes.CHECK_AUTH_TIMEOUT, checkAuthTimeoutSaga);\n        ])];\n\n      case 1:\n        _a.sent();\n\n        _a.label = 2;\n\n      case 2:\n        return [4\n        /*yield*/\n        , effects_1.take(authActionTypes.CHECK_AUTH_TIMEOUT)];\n\n      case 3:\n        if (!(payload = _a.sent())) return [3\n        /*break*/\n        , 6];\n        return [4\n        /*yield*/\n        , effects_1.fork(auth_1.checkAuthTimeoutSaga, payload)];\n\n      case 4:\n        bgSyncTask = _a.sent(); //// wait for the user to sign out\n        //yield take(authActionTypes.STOP_AUTH_TIMER);\n        //// user signed out. cancel the background task\n        //// this will cause the forked bgSync task to jump into its finally block\n        //yield cancel(bgSyncTask);\n        // Or\n\n        return [4\n        /*yield*/\n        , effects_1.takeLatest(authActionTypes.STOP_AUTH_TIMER, cancelWorkerSaga, bgSyncTask)];\n\n      case 5:\n        //// wait for the user to sign out\n        //yield take(authActionTypes.STOP_AUTH_TIMER);\n        //// user signed out. cancel the background task\n        //// this will cause the forked bgSync task to jump into its finally block\n        //yield cancel(bgSyncTask);\n        // Or\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 2];\n\n      case 6:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n\nexports.watchAuth = watchAuth; //function* watchCheckAuthTimeout() {\n//    yield takeLatest(authActionTypes.CHECK_AUTH_TIMEOUT, checkAuthTimeoutSaga);\n//}\n//export function* watchLocation() {\n//    yield all([\n//        takeLatest(locationActionTypes.FETCH_COUNTRIES, fetchCountriesSaga),\n//        takeLatest(locationActionTypes.SELECT_COUNTRY, selectCountrySaga),\n//        takeLatest(locationActionTypes.SELECT_CITY, selectCitySaga)\n//    ]);\n//}\n\nfunction watchBank() {\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        return [4\n        /*yield*/\n        , effects_1.all([effects_1.takeLatest(bankActionTypes.FETCH_BANKS, bank_1.fetchBanksSaga), effects_1.takeLatest(bankActionTypes.FETCH_BANKS_COUNT, bank_1.fetchBanksCountSaga), effects_1.takeLatest(bankActionTypes.FETCH_BANK, bank_1.fetchBankSaga), effects_1.takeLatest(bankActionTypes.UPLOAD_BANK_LOGO, bank_1.uploadBankLogoSaga), effects_1.takeLatest(bankActionTypes.DELETE_BANK_LOGO, bank_1.deleteBankLogoSaga), effects_1.takeLatest(bankActionTypes.SAVE_BANK, bank_1.saveBankSaga), effects_1.takeLatest(bankActionTypes.DELETE_BANK, bank_1.deleteBankSaga)])];\n\n      case 1:\n        _a.sent();\n\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n\nexports.watchBank = watchBank;\n\nfunction cancelWorkerSaga(task) {\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        return [4\n        /*yield*/\n        , effects_1.cancel(task)];\n\n      case 1:\n        _a.sent();\n\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}","map":{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.watchBank = exports.watchAuth = void 0;\r\nvar effects_1 = require(\"redux-saga/effects\");\r\nvar auth_1 = require(\"./auth\");\r\n//import { fetchCountriesSaga, selectCountrySaga, selectCitySaga } from './location';\r\nvar bank_1 = require(\"./bank\");\r\nvar authActionTypes = require(\"../actions/authActionTypes\");\r\n//import * as locationActionTypes from '../actions/locationActionTypes';\r\nvar bankActionTypes = require(\"../actions/bankActionTypes\");\r\nfunction watchAuth() {\r\n    var payload, bgSyncTask;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, effects_1.all([\r\n                    effects_1.takeLatest(authActionTypes.AUTO_SIGN_IN, auth_1.autoSignInSaga),\r\n                    effects_1.takeLatest(authActionTypes.SIGN_IN_START, auth_1.signInSaga),\r\n                    effects_1.takeLatest(authActionTypes.SIGN_OUT, auth_1.signOutSaga),\r\n                    //takeLatest(authActionTypes.CHECK_AUTH_TIMEOUT, checkAuthTimeoutSaga);\r\n                ])];\r\n            case 1:\r\n                _a.sent();\r\n                _a.label = 2;\r\n            case 2: return [4 /*yield*/, effects_1.take(authActionTypes.CHECK_AUTH_TIMEOUT)];\r\n            case 3:\r\n                if (!(payload = _a.sent())) return [3 /*break*/, 6];\r\n                return [4 /*yield*/, effects_1.fork(auth_1.checkAuthTimeoutSaga, payload)];\r\n            case 4:\r\n                bgSyncTask = _a.sent();\r\n                //// wait for the user to sign out\r\n                //yield take(authActionTypes.STOP_AUTH_TIMER);\r\n                //// user signed out. cancel the background task\r\n                //// this will cause the forked bgSync task to jump into its finally block\r\n                //yield cancel(bgSyncTask);\r\n                // Or\r\n                return [4 /*yield*/, effects_1.takeLatest(authActionTypes.STOP_AUTH_TIMER, cancelWorkerSaga, bgSyncTask)];\r\n            case 5:\r\n                //// wait for the user to sign out\r\n                //yield take(authActionTypes.STOP_AUTH_TIMER);\r\n                //// user signed out. cancel the background task\r\n                //// this will cause the forked bgSync task to jump into its finally block\r\n                //yield cancel(bgSyncTask);\r\n                // Or\r\n                _a.sent();\r\n                return [3 /*break*/, 2];\r\n            case 6: return [2 /*return*/];\r\n        }\r\n    });\r\n}\r\nexports.watchAuth = watchAuth;\r\n//function* watchCheckAuthTimeout() {\r\n//    yield takeLatest(authActionTypes.CHECK_AUTH_TIMEOUT, checkAuthTimeoutSaga);\r\n//}\r\n//export function* watchLocation() {\r\n//    yield all([\r\n//        takeLatest(locationActionTypes.FETCH_COUNTRIES, fetchCountriesSaga),\r\n//        takeLatest(locationActionTypes.SELECT_COUNTRY, selectCountrySaga),\r\n//        takeLatest(locationActionTypes.SELECT_CITY, selectCitySaga)\r\n//    ]);\r\n//}\r\nfunction watchBank() {\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, effects_1.all([\r\n                    effects_1.takeLatest(bankActionTypes.FETCH_BANKS, bank_1.fetchBanksSaga),\r\n                    effects_1.takeLatest(bankActionTypes.FETCH_BANKS_COUNT, bank_1.fetchBanksCountSaga),\r\n                    effects_1.takeLatest(bankActionTypes.FETCH_BANK, bank_1.fetchBankSaga),\r\n                    effects_1.takeLatest(bankActionTypes.UPLOAD_BANK_LOGO, bank_1.uploadBankLogoSaga),\r\n                    effects_1.takeLatest(bankActionTypes.DELETE_BANK_LOGO, bank_1.deleteBankLogoSaga),\r\n                    effects_1.takeLatest(bankActionTypes.SAVE_BANK, bank_1.saveBankSaga),\r\n                    effects_1.takeLatest(bankActionTypes.DELETE_BANK, bank_1.deleteBankSaga),\r\n                ])];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/];\r\n        }\r\n    });\r\n}\r\nexports.watchBank = watchBank;\r\nfunction cancelWorkerSaga(task) {\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, effects_1.cancel(task)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/];\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}