{"ast":null,"code":"import _slicedToArray from \"H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"H:\\\\Project\\\\Microservices\\\\MicroservicesSampleProject\\\\Client\\\\Client.SPA\\\\ClientApp\\\\src\\\\hoc\\\\Layout\\\\Layout.tsx\",\n    _this = this;\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as classes from './Layout.module.css';\nimport Toolbar from '../../components/UI/Navigation/Toolbar/Toolbar';\nimport Footer from '../../components/UI/Footer/Footer';\nimport SideDrawer from '../../components/UI/Navigation/SideDrawer/SideDrawer';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nexport default (function (props) {\n  var _useSelector = useSelector(function (state) {\n    return {\n      loading: state.common.isLoading\n    };\n  }),\n      loading = _useSelector.loading;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSideDrawerVisible = _useState2[0],\n      setIsSideDrawerVisible = _useState2[1];\n\n  var toggleSideDrawerHandler = function toggleSideDrawerHandler() {\n    setIsSideDrawerVisible(function (prevIsSideDrawerVisible) {\n      return !prevIsSideDrawerVisible;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Layout,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      drawerToggleClicked: function drawerToggleClicked() {\n        return toggleSideDrawerHandler();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(SideDrawer, {\n      isShown: isSideDrawerVisible,\n      hide: function hide() {\n        return toggleSideDrawerHandler();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, _this);\n});","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/hoc/Layout/Layout.tsx"],"names":["React","useState","useSelector","classes","Toolbar","Footer","SideDrawer","Spinner","props","state","loading","common","isLoading","isSideDrawerVisible","setIsSideDrawerVisible","toggleSideDrawerHandler","prevIsSideDrawerVisible","Layout","children"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,gDAApB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,UAAP,MAAuB,sDAAvB;AAEA,OAAOC,OAAP,MAAoB,qCAApB;;AAIC;AAED,gBAAe,UAACC,KAAD,EAA2C;AAEtD,qBAAgCN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAsB;AAC9DC,MAAAA,OAAO,EAAED,KAAK,CAACE,MAAN,CAAaC;AADwC,KAAtB;AAAA,GAAD,CAA3C;AAAA,MAAQF,OAAR,gBAAQA,OAAR;;AAIA,kBAAsDT,QAAQ,CAAU,KAAV,CAA9D;AAAA;AAAA,MAAOY,mBAAP;AAAA,MAA4BC,sBAA5B;;AACA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAClCD,IAAAA,sBAAsB,CAAC,UAAAE,uBAAuB;AAAA,aAAI,CAACA,uBAAL;AAAA,KAAxB,CAAtB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,MAAxB;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,mBAAmB,EAAE;AAAA,eAAMF,uBAAuB,EAA7B;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,aADJ,eAGI,QAAC,UAAD;AACI,MAAA,OAAO,EAAEF,mBADb;AAEI,MAAA,IAAI,EAAE;AAAA,eAAME,uBAAuB,EAA7B;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,aAHJ,eAMI;AAAA,gBACKP,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,aANJ,eASI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aATJ,EAUKR,OAAO,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAVhB;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CAzBD","sourcesContent":["import * as React from 'react';\r\nimport { Fragment, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport * as classes from './Layout.module.css';\r\nimport Toolbar from '../../components/UI/Navigation/Toolbar/Toolbar';\r\nimport Footer from '../../components/UI/Footer/Footer';\r\nimport SideDrawer from '../../components/UI/Navigation/SideDrawer/SideDrawer';\r\nimport { AppState } from '../../store';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\ninterface StoreProps {\r\n    loading: boolean\r\n};\r\n\r\nexport default (props: { children?: React.ReactNode }) => {\r\n\r\n    const { loading }: StoreProps = useSelector((state: AppState) => ({\r\n        loading: state.common.isLoading\r\n    }));\r\n\r\n    const [isSideDrawerVisible, setIsSideDrawerVisible] = useState<boolean>(false);\r\n    const toggleSideDrawerHandler = () => {\r\n        setIsSideDrawerVisible(prevIsSideDrawerVisible => !prevIsSideDrawerVisible);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.Layout}>\r\n            <Toolbar drawerToggleClicked={() => toggleSideDrawerHandler()} >\r\n            </Toolbar>\r\n            <SideDrawer\r\n                isShown={isSideDrawerVisible}\r\n                hide={() => toggleSideDrawerHandler()} />\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n            <Footer />\r\n            {loading && <Spinner />}\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}