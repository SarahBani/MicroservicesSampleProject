{"ast":null,"code":"import axios from 'axios';\nvar axiosInstance = axios.create({\n  baseURL: 'http://localhost:5100/gateway'\n}); //instance.default.headers.common['Authorization'] = 'Auth Token dgdfgdfg';\n//instance.default.headers.post['Content-Type'] = 'application/json';\n\naxiosInstance.interceptors.request.use(function (requestConfig) {\n  return requestConfig;\n}, function (error) {\n  console.log('axiosInstance request error');\n  console.log(error);\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (responseConfig) {\n  return responseConfig;\n}, function (error) {\n  console.log('axiosInstance response error');\n  console.log(error);\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/shared/crud-axios-instance.ts"],"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","requestConfig","error","console","log","Promise","reject","response","responseConfig"],"mappings":"AAAA,OAAOA,KAAP,MAAwE,OAAxE;AAEA,IAAMC,aAA4B,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC9CC,EAAAA,OAAO,EAAE;AADqC,CAAb,CAArC,C,CAIA;AACA;;AAEAF,aAAa,CAACG,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAACC,aAAD,EAAuC;AAC1E,SAAOA,aAAP;AACH,CAFD,EAEG,UAAAC,KAAK,EAAI;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CAND;AAOAP,aAAa,CAACG,YAAd,CAA2BS,QAA3B,CAAoCP,GAApC,CAAwC,UAACQ,cAAD,EAAmC;AACvE,SAAOA,cAAP;AACH,CAFD,EAEG,UAAAN,KAAK,EAAI;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CAND;AAQA,eAAeP,aAAf","sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nconst axiosInstance: AxiosInstance = axios.create({\r\n    baseURL: 'http://localhost:5100/gateway'\r\n});\r\n\r\n//instance.default.headers.common['Authorization'] = 'Auth Token dgdfgdfg';\r\n//instance.default.headers.post['Content-Type'] = 'application/json';\r\n\r\naxiosInstance.interceptors.request.use((requestConfig: AxiosRequestConfig) => {\r\n    return requestConfig;\r\n}, error => {\r\n    console.log('axiosInstance request error');\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n});\r\naxiosInstance.interceptors.response.use((responseConfig: AxiosResponse) => {\r\n    return responseConfig;\r\n}, error => {\r\n    console.log('axiosInstance response error');\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axiosInstance;"]},"metadata":{},"sourceType":"module"}