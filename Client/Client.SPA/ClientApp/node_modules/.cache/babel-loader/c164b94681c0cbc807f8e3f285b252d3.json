{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\Microservices\\\\MicroservicesSampleProject\\\\Client\\\\Client.SPA\\\\ClientApp\\\\src\\\\components\\\\UI\\\\Pagination\\\\Pagination.tsx\",\n    _this = this;\n\nimport * as React from 'react';\nimport { useMemo, Fragment, memo } from 'react';\nimport * as classes from './Pagination.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nvar Pagination = /*#__PURE__*/memo(function (_ref) {\n  var pageNo = _ref.pageNo,\n      pagesCount = _ref.pagesCount,\n      onChange = _ref.onChange;\n  var prevPages = useMemo(function () {\n    if (pageNo > 1) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick() {\n            return onChange(pageNo - 1);\n          },\n          children: \"\\xAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, _this), pageNo === pagesCount && pageNo > 2 && /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick() {\n            return onChange(pageNo - 2);\n          },\n          children: pageNo - 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick() {\n            return onChange(pageNo - 1);\n          },\n          children: pageNo - 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, _this);\n    }\n  }, [pageNo]);\n  var currentPage = useMemo(function () {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.ActiveLink,\n      children: pageNo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, _this);\n  }, [pageNo]);\n  var nextPages = useMemo(function () {\n    if (pageNo < pagesCount) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick() {\n            return onChange(pageNo + 1);\n          },\n          children: pageNo + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, _this), pageNo === 1 && pageNo + 1 < pagesCount && /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick() {\n            return onChange(pageNo + 2);\n          },\n          children: pageNo + 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick() {\n            return onChange(pageNo + 1);\n          },\n          children: \"\\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this);\n    }\n  }, [pageNo, pagesCount]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: [classes.Pagination, \"pagination\"].join(' '),\n    children: [prevPages, currentPage, nextPages]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, _this);\n});\nexport default Pagination;","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/components/UI/Pagination/Pagination.tsx"],"names":["React","useMemo","Fragment","memo","classes","Pagination","pageNo","pagesCount","onChange","prevPages","currentPage","ActiveLink","nextPages","join"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,IAA5B,QAA4C,OAA5C;AAEA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;;AAMC;AAED,IAAMC,UAAqB,gBAAGF,IAAI,CAAC,gBAAsC;AAAA,MAAnCG,MAAmC,QAAnCA,MAAmC;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAErE,MAAIC,SAAS,GAAGR,OAAO,CAAC,YAAM;AAC1B,QAAIK,MAAM,GAAG,CAAb,EAAgB;AACZ,0BACI,QAAC,QAAD;AAAA,gCACI;AAAI,UAAA,OAAO,EAAE;AAAA,mBAAME,QAAQ,CAACF,MAAM,GAAG,CAAV,CAAd;AAAA,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAKSA,MAAM,KAAKC,UAAX,IAAyBD,MAAM,GAAG,CAAnC,iBACA;AAAI,UAAA,OAAO,EAAE;AAAA,mBAAME,QAAQ,CAACF,MAAM,GAAG,CAAV,CAAd;AAAA,WAAb;AAAA,oBACKA,MAAM,GAAG;AADd;AAAA;AAAA;AAAA;AAAA,iBANR,eAUI;AAAI,UAAA,OAAO,EAAE;AAAA,mBAAME,QAAQ,CAACF,MAAM,GAAG,CAAV,CAAd;AAAA,WAAb;AAAA,oBACKA,MAAM,GAAG;AADd;AAAA;AAAA;AAAA;AAAA,iBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAgBH;AACJ,GAnBsB,EAmBpB,CAACA,MAAD,CAnBoB,CAAvB;AAqBA,MAAMI,WAAW,GAAGT,OAAO,CAAC;AAAA,wBACxB;AAAI,MAAA,SAAS,EAAEG,OAAO,CAACO,UAAvB;AAAA,gBACKL;AADL;AAAA;AAAA;AAAA;AAAA,aADwB;AAAA,GAAD,EAIxB,CAACA,MAAD,CAJwB,CAA3B;AAMA,MAAIM,SAAS,GAAGX,OAAO,CAAC,YAAM;AAC1B,QAAIK,MAAM,GAAGC,UAAb,EAAyB;AACrB,0BACI,QAAC,QAAD;AAAA,gCACI;AAAI,UAAA,OAAO,EAAE;AAAA,mBAAMC,QAAQ,CAACF,MAAM,GAAG,CAAV,CAAd;AAAA,WAAb;AAAA,oBACKA,MAAM,GAAG;AADd;AAAA;AAAA;AAAA;AAAA,iBADJ,EAKSA,MAAM,KAAK,CAAX,IAAgBA,MAAM,GAAG,CAAT,GAAaC,UAA9B,iBACA;AAAI,UAAA,OAAO,EAAE;AAAA,mBAAMC,QAAQ,CAACF,MAAM,GAAG,CAAV,CAAd;AAAA,WAAb;AAAA,oBACKA,MAAM,GAAG;AADd;AAAA;AAAA;AAAA;AAAA,iBANR,eAUI;AAAI,UAAA,OAAO,EAAE;AAAA,mBAAME,QAAQ,CAACF,MAAM,GAAG,CAAV,CAAd;AAAA,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAgBH;AACJ,GAnBsB,EAmBpB,CAACA,MAAD,EAASC,UAAT,CAnBoB,CAAvB;AAqBA,sBACI;AAAI,IAAA,SAAS,EAAE,CAACH,OAAO,CAACC,UAAT,EAAqB,YAArB,EAAmCQ,IAAnC,CAAwC,GAAxC,CAAf;AAAA,eACKJ,SADL,EAEKC,WAFL,EAGKE,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAzDiC,CAAlC;AA2DA,eAAeP,UAAf","sourcesContent":["import * as React from 'react';\r\nimport { useMemo, Fragment, memo, FC } from 'react';\r\n\r\nimport * as classes from './Pagination.module.scss';\r\n\r\ninterface Props {\r\n    pageNo: number,\r\n    pagesCount: number,\r\n    onChange: (pageIndex: number) => void\r\n};\r\n\r\nconst Pagination: FC<Props> = memo(({ pageNo, pagesCount, onChange }) => {\r\n\r\n    let prevPages = useMemo(() => {\r\n        if (pageNo > 1) {\r\n            return (\r\n                <Fragment>\r\n                    <li onClick={() => onChange(pageNo - 1)}>\r\n                        &laquo;\r\n                    </li>\r\n                    {\r\n                        (pageNo === pagesCount && pageNo > 2) &&\r\n                        <li onClick={() => onChange(pageNo - 2)}>\r\n                            {pageNo - 2}\r\n                        </li>\r\n                    }\r\n                    <li onClick={() => onChange(pageNo - 1)}>\r\n                        {pageNo - 1}\r\n                    </li>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }, [pageNo]);\r\n\r\n    const currentPage = useMemo(() => (\r\n        <li className={classes.ActiveLink}>\r\n            {pageNo}\r\n        </li>\r\n    ), [pageNo]);\r\n\r\n    let nextPages = useMemo(() => {\r\n        if (pageNo < pagesCount) {\r\n            return (\r\n                <Fragment>\r\n                    <li onClick={() => onChange(pageNo + 1)}>\r\n                        {pageNo + 1}\r\n                    </li>\r\n                    {\r\n                        (pageNo === 1 && pageNo + 1 < pagesCount) &&\r\n                        <li onClick={() => onChange(pageNo + 2)}>\r\n                            {pageNo + 2}\r\n                        </li>\r\n                    }\r\n                    <li onClick={() => onChange(pageNo + 1)}>\r\n                        &raquo;\r\n                    </li>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }, [pageNo, pagesCount]);\r\n\r\n    return (\r\n        <ul className={[classes.Pagination, \"pagination\"].join(' ')}>\r\n            {prevPages}\r\n            {currentPage}\r\n            {nextPages}\r\n        </ul>\r\n    );\r\n});\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}