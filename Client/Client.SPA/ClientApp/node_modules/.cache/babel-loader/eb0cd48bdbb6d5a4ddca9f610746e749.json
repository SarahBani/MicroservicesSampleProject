{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.actionCreators = void 0; // ----------------\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\n\nexports.actionCreators = {\n  increment: function increment() {\n    return {\n      type: 'INCREMENT_COUNT'\n    };\n  },\n  decrement: function decrement() {\n    return {\n      type: 'DECREMENT_COUNT'\n    };\n  }\n}; // ----------------\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\n\nvar reducer = function reducer(state, incomingAction) {\n  if (state === undefined) {\n    return {\n      count: 0\n    };\n  }\n\n  var action = incomingAction;\n\n  switch (action.type) {\n    case 'INCREMENT_COUNT':\n      return {\n        count: state.count + 1\n      };\n\n    case 'DECREMENT_COUNT':\n      return {\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexports.reducer = reducer;","map":{"version":3,"sources":["Counter.ts"],"names":[],"mappings":";;;;;mDAqBA;AACA;AACA;;AAEa,OAAA,CAAA,cAAA,GAAiB;AAC1B,EAAA,SAAS,EAAE,qBAAA;AAAM,WAAC;AAAE,MAAA,IAAI,EAAP;AAAC,KAAD;AAAqD,GAD5C;AAE1B,EAAA,SAAS,EAAE,qBAAA;AAAM,WAAC;AAAE,MAAA,IAAI,EAAP;AAAC,KAAD;AAAqD;AAF5C,CAAjB,C,CAKb;AACA;;AAEO,IAAM,OAAO,GAA0B,SAAjC,OAAiC,CAAC,KAAD,EAAkC,cAAlC,EAAwD;AAClG,MAAI,KAAK,KAAK,SAAd,EAAyB;AACrB,WAAO;AAAE,MAAA,KAAK,EAAE;AAAT,KAAP;AACH;;AAED,MAAM,MAAM,GAAG,cAAf;;AACA,UAAQ,MAAM,CAAC,IAAf;AACI,SAAK,iBAAL;AACI,aAAO;AAAE,QAAA,KAAK,EAAE,KAAK,CAAC,KAAN,GAAc;AAAvB,OAAP;;AACJ,SAAK,iBAAL;AACI,aAAO;AAAE,QAAA,KAAK,EAAE,KAAK,CAAC,KAAN,GAAc;AAAvB,OAAP;;AACJ;AACI,aAAO,KAAP;AANR;AAQH,CAdM;;AAAM,OAAA,CAAA,OAAA,GAAO,OAAP","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.reducer = exports.actionCreators = void 0;\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\nexports.actionCreators = {\r\n    increment: function () { return ({ type: 'INCREMENT_COUNT' }); },\r\n    decrement: function () { return ({ type: 'DECREMENT_COUNT' }); }\r\n};\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\nvar reducer = function (state, incomingAction) {\r\n    if (state === undefined) {\r\n        return { count: 0 };\r\n    }\r\n    var action = incomingAction;\r\n    switch (action.type) {\r\n        case 'INCREMENT_COUNT':\r\n            return { count: state.count + 1 };\r\n        case 'DECREMENT_COUNT':\r\n            return { count: state.count - 1 };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexports.reducer = reducer;\r\n//# sourceMappingURL=Counter.js.map"]},"metadata":{},"sourceType":"module"}