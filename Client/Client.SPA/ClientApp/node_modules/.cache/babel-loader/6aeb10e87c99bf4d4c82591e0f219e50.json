{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nexports.default = function (axios) {\n  var _a = react_1.useState(null),\n      error = _a[0],\n      setError = _a[1];\n\n  var reqInterceptor = axios.interceptors.request.use(function (req) {\n    setError(null);\n    return req;\n  });\n  var resInterceptor = axios.interceptors.response.use(function (res) {\n    return res;\n  }, function (err) {\n    setError(err);\n  });\n  react_1.useEffect(function () {\n    return function () {\n      axios.interceptors.request.eject(reqInterceptor);\n      axios.interceptors.response.eject(resInterceptor);\n    };\n  }, [reqInterceptor, resInterceptor]);\n\n  var clearError = function clearError() {\n    setError(null);\n  };\n\n  return [error, clearError];\n}; //interface ErrorHandlerType {\n//    interceptors: {\n//        request: {\n//            use: (arg0: (req: any) => any) => any;\n//            eject: (arg0: any) => void\n//        },\n//        response: {\n//            use: (arg0: (res: any) => any, arg1: (err: any) => void) => any;\n//            eject: (arg0: any) => void\n//        }\n//    }\n//}\n//export default (httpErrorHandler: ErrorHandlerType): [string | null, (() => void)] => {\n//    const [error, setError] = useState<string | null>(null);\n//    const reqInterceptor = httpErrorHandler.interceptors.request.use(\n//        req => {\n//            setError(null);\n//            return req;\n//        });\n//    const resInterceptor = httpErrorHandler.interceptors.response.use(\n//        res => res,\n//        err => {\n//            setError(err);\n//        }\n//    );\n//    useEffect(() => {\n//        return () => {\n//            httpErrorHandler.interceptors.request.eject(reqInterceptor);\n//            httpErrorHandler.interceptors.response.eject(resInterceptor);\n//        }\n//    }, [reqInterceptor, resInterceptor]);\n//    const clearError = (): void => {\n//        setError(null);\n//    }\n//    return [error, clearError];\n//};\n//const httpErrorHandler = (axios: AxiosInstance): [string | null, () => void] => {\n//    //export default (httpErrorHandler: ErrorHandlerType)    => {\n//    //export default (httpErrorHandler: [string | null, (() => void)])=> {\n//    const [error, setError] = useState<string | null>(null);\n//    const reqInterceptor = axios.interceptors.request.use(\n//        req => {\n//            setError(null);\n//            return req;\n//        });\n//    const resInterceptor = axios.interceptors.response.use(\n//        res => res,\n//        err => {\n//            setError(err);\n//        }\n//    );\n//    useEffect(() => {\n//        return () => {\n//            axios.interceptors.request.eject(reqInterceptor);\n//            axios.interceptors.response.eject(resInterceptor);\n//        }\n//    }, [reqInterceptor, resInterceptor]);\n//    const clearError = (): void => {\n//        setError(null);\n//    }\n//    //return [error, clearError] as [string, () => void]; // as const;\n//    return [error, clearError];\n//};\n//export default httpErrorHandler;","map":{"version":3,"sources":["http-error-handler.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,OAAA,CAAA,OAAA,GAAe,UAAC,KAAD,EAAqB;AAE1B,MAAA,EAAA,GAAoB,OAAA,CAAA,QAAA,CAAwB,IAAxB,CAApB;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AAEN,MAAM,cAAc,GAAG,KAAK,CAAC,YAAN,CAAmB,OAAnB,CAA2B,GAA3B,CACnB,UAAA,GAAA,EAAG;AACC,IAAA,QAAQ,CAAC,IAAD,CAAR;AACA,WAAO,GAAP;AACH,GAJkB,CAAvB;AAMA,MAAM,cAAc,GAAG,KAAK,CAAC,YAAN,CAAmB,QAAnB,CAA4B,GAA5B,CACnB,UAAA,GAAA,EAAG;AAAI,WAAA,GAAA;AAAG,GADS,EAEnB,UAAA,GAAA,EAAG;AACC,IAAA,QAAQ,CAAC,GAAD,CAAR;AACH,GAJkB,CAAvB;AAOA,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACN,WAAO,YAAA;AACH,MAAA,KAAK,CAAC,YAAN,CAAmB,OAAnB,CAA2B,KAA3B,CAAiC,cAAjC;AACA,MAAA,KAAK,CAAC,YAAN,CAAmB,QAAnB,CAA4B,KAA5B,CAAkC,cAAlC;AACH,KAHD;AAIH,GALD,EAKG,CAAC,cAAD,EAAiB,cAAjB,CALH;;AAOA,MAAM,UAAU,GAAG,SAAb,UAAa,GAAA;AACf,IAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAIA,SAAO,CAAC,KAAD,EAAQ,UAAR,CAAP;AACH,CA7BD,C,CAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = require(\"react\");\r\nexports.default = (function (axios) {\r\n    var _a = react_1.useState(null), error = _a[0], setError = _a[1];\r\n    var reqInterceptor = axios.interceptors.request.use(function (req) {\r\n        setError(null);\r\n        return req;\r\n    });\r\n    var resInterceptor = axios.interceptors.response.use(function (res) { return res; }, function (err) {\r\n        setError(err);\r\n    });\r\n    react_1.useEffect(function () {\r\n        return function () {\r\n            axios.interceptors.request.eject(reqInterceptor);\r\n            axios.interceptors.response.eject(resInterceptor);\r\n        };\r\n    }, [reqInterceptor, resInterceptor]);\r\n    var clearError = function () {\r\n        setError(null);\r\n    };\r\n    return [error, clearError];\r\n});\r\n//interface ErrorHandlerType {\r\n//    interceptors: {\r\n//        request: {\r\n//            use: (arg0: (req: any) => any) => any;\r\n//            eject: (arg0: any) => void\r\n//        },\r\n//        response: {\r\n//            use: (arg0: (res: any) => any, arg1: (err: any) => void) => any;\r\n//            eject: (arg0: any) => void\r\n//        }\r\n//    }\r\n//}\r\n//export default (httpErrorHandler: ErrorHandlerType): [string | null, (() => void)] => {\r\n//    const [error, setError] = useState<string | null>(null);\r\n//    const reqInterceptor = httpErrorHandler.interceptors.request.use(\r\n//        req => {\r\n//            setError(null);\r\n//            return req;\r\n//        });\r\n//    const resInterceptor = httpErrorHandler.interceptors.response.use(\r\n//        res => res,\r\n//        err => {\r\n//            setError(err);\r\n//        }\r\n//    );\r\n//    useEffect(() => {\r\n//        return () => {\r\n//            httpErrorHandler.interceptors.request.eject(reqInterceptor);\r\n//            httpErrorHandler.interceptors.response.eject(resInterceptor);\r\n//        }\r\n//    }, [reqInterceptor, resInterceptor]);\r\n//    const clearError = (): void => {\r\n//        setError(null);\r\n//    }\r\n//    return [error, clearError];\r\n//};\r\n//const httpErrorHandler = (axios: AxiosInstance): [string | null, () => void] => {\r\n//    //export default (httpErrorHandler: ErrorHandlerType)    => {\r\n//    //export default (httpErrorHandler: [string | null, (() => void)])=> {\r\n//    const [error, setError] = useState<string | null>(null);\r\n//    const reqInterceptor = axios.interceptors.request.use(\r\n//        req => {\r\n//            setError(null);\r\n//            return req;\r\n//        });\r\n//    const resInterceptor = axios.interceptors.response.use(\r\n//        res => res,\r\n//        err => {\r\n//            setError(err);\r\n//        }\r\n//    );\r\n//    useEffect(() => {\r\n//        return () => {\r\n//            axios.interceptors.request.eject(reqInterceptor);\r\n//            axios.interceptors.response.eject(resInterceptor);\r\n//        }\r\n//    }, [reqInterceptor, resInterceptor]);\r\n//    const clearError = (): void => {\r\n//        setError(null);\r\n//    }\r\n//    //return [error, clearError] as [string, () => void]; // as const;\r\n//    return [error, clearError];\r\n//};\r\n//export default httpErrorHandler;\r\n//# sourceMappingURL=http-error-handler.js.map"]},"metadata":{},"sourceType":"module"}