{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire(\"bootstrap/dist/css/bootstrap.css\");\n\nrequire(\"react-app-polyfill/ie11\");\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar redux_1 = require(\"redux\");\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar redux_saga_1 = require(\"redux-saga\");\n\nvar connected_react_router_1 = require(\"connected-react-router\");\n\nvar history_1 = require(\"history\");\n\nvar App_1 = require(\"./components/App\");\n\nvar registerServiceWorker_1 = require(\"./registerServiceWorker\");\n\nvar commonReducer_1 = require(\"./store/reducers/commonReducer\");\n\nvar authReducer_1 = require(\"./store/reducers/authReducer\");\n\nvar bankReducer_1 = require(\"./store/reducers/bankReducer\"); // Create browser history to use in the Redux store\n\n\nvar baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nvar history = history_1.createBrowserHistory({\n  basename: baseUrl\n});\nvar rootElement = document.getElementById('root');\nvar sagaMiddleware = redux_saga_1.default();\nvar rootReducer = redux_1.combineReducers({\n  common: commonReducer_1.default,\n  auth: authReducer_1.default,\n  //location: locationReducer,\n  bank: bankReducer_1.default //upload: uploadReducer\n\n}); //const composeEnhancers = (process.env.NODE_ENV === 'developement' ?\n//    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n//    (null || compose));\n\nvar composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || redux_1.compose; // Get the application-wide store instance, prepopulating with state from the server where available.\n\nvar store = redux_1.createStore(rootReducer, composeEnhancers(redux_1.applyMiddleware(sagaMiddleware)));\nReactDOM.render(React.createElement(react_redux_1.Provider, {\n  store: store\n}, React.createElement(connected_react_router_1.ConnectedRouter, {\n  history: history\n}, React.createElement(App_1.default, null))), rootElement);\nregisterServiceWorker_1.default();","map":{"version":3,"sources":["index.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAA,CAAA,kCAAA,CAAA;;AACA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAGA,IAAA,KAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,8BAAA,CAAA,C,CAEA;;;AACA,IAAM,OAAO,GAAW,QAAQ,CAAC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyC,YAAzC,CAAsD,MAAtD,CAAxB;AACA,IAAM,OAAO,GAAY,SAAA,CAAA,oBAAA,CAAqB;AAAE,EAAA,QAAQ,EAAE;AAAZ,CAArB,CAAzB;AACA,IAAM,WAAW,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAApB;AAEA,IAAM,cAAc,GAAG,YAAA,CAAA,OAAA,EAAvB;AAEA,IAAM,WAAW,GAAG,OAAA,CAAA,eAAA,CAAgB;AAChC,EAAA,MAAM,EAAE,eAAA,CAAA,OADwB;AAEhC,EAAA,IAAI,EAAE,aAAA,CAAA,OAF0B;AAGhC;AACA,EAAA,IAAI,EAAE,aAAA,CAAA,OAJ0B,CAKhC;;AALgC,CAAhB,CAApB,C,CAOA;AACA;AACA;;AACA,IAAM,gBAAgB,GAAG,MAAM,CAAC,sCAAD,CAAN,IAAoE,OAAA,CAAA,OAA7F,C,CAEA;;AACA,IAAM,KAAK,GAAG,OAAA,CAAA,WAAA,CAAY,WAAZ,EAAyB,gBAAgB,CAAC,OAAA,CAAA,eAAA,CAAgB,cAAhB,CAAD,CAAzC,CAAd;AAEA,QAAQ,CAAC,MAAT,CACI,KAAA,CAAA,aAAA,CAAC,aAAA,CAAA,QAAD,EAAS;AAAC,EAAA,KAAK,EAAE;AAAR,CAAT,EACI,KAAA,CAAA,aAAA,CAAC,wBAAA,CAAA,eAAD,EAAgB;AAAC,EAAA,OAAO,EAAE;AAAV,CAAhB,EACI,KAAA,CAAA,aAAA,CAAC,KAAA,CAAA,OAAD,EAAI,IAAJ,CADJ,CADJ,CADJ,EAMI,WANJ;AAQA,uBAAA,CAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"bootstrap/dist/css/bootstrap.css\");\r\nrequire(\"react-app-polyfill/ie11\");\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar redux_1 = require(\"redux\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar redux_saga_1 = require(\"redux-saga\");\r\nvar connected_react_router_1 = require(\"connected-react-router\");\r\nvar history_1 = require(\"history\");\r\nvar App_1 = require(\"./components/App\");\r\nvar registerServiceWorker_1 = require(\"./registerServiceWorker\");\r\nvar commonReducer_1 = require(\"./store/reducers/commonReducer\");\r\nvar authReducer_1 = require(\"./store/reducers/authReducer\");\r\nvar bankReducer_1 = require(\"./store/reducers/bankReducer\");\r\n// Create browser history to use in the Redux store\r\nvar baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nvar history = history_1.createBrowserHistory({ basename: baseUrl });\r\nvar rootElement = document.getElementById('root');\r\nvar sagaMiddleware = redux_saga_1.default();\r\nvar rootReducer = redux_1.combineReducers({\r\n    common: commonReducer_1.default,\r\n    auth: authReducer_1.default,\r\n    //location: locationReducer,\r\n    bank: bankReducer_1.default,\r\n    //upload: uploadReducer\r\n});\r\n//const composeEnhancers = (process.env.NODE_ENV === 'developement' ?\r\n//    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\r\n//    (null || compose));\r\nvar composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || redux_1.compose;\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nvar store = redux_1.createStore(rootReducer, composeEnhancers(redux_1.applyMiddleware(sagaMiddleware)));\r\nReactDOM.render(React.createElement(react_redux_1.Provider, { store: store },\r\n    React.createElement(connected_react_router_1.ConnectedRouter, { history: history },\r\n        React.createElement(App_1.default, null))), rootElement);\r\nregisterServiceWorker_1.default();\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}