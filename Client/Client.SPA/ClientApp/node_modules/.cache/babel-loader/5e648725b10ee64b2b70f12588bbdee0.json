{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"react\");\n\nvar react_router_dom_1 = require(\"react-router-dom\");\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar classes = require(\"./BankList.module.scss\");\n\nvar BankItem_1 = require(\"../BankItem/BankItem\");\n\nvar NoBank_1 = require(\"../NoBank/NoBank\");\n\nvar actions = require(\"../../../store/actions/bankActions\");\n\nvar Pagination_1 = require(\"../../UI/Pagination/Pagination\");\n\nvar pageCount = 10;\n; //const BankList: FC<Props> = ({ banks, banksCount, successfulOperation, loggedIn, onFetchBanks, onFetchBanksCount }) => {\n\nvar BankList = function BankList() {\n  var _a = react_1.useState(1),\n      pageNo = _a[0],\n      setPageNo = _a[1];\n\n  var _b = react_1.useState(1),\n      pagesCount = _b[0],\n      setPagesCount = _b[1]; //const count = useSelector(state => state.counter.count);\n\n\n  var _c = react_redux_1.useSelector(function (state) {\n    return {\n      banks: state.bank.banks,\n      banksCount: state.bank.count,\n      successfulOperation: state.common.successfulOperation,\n      loggedIn: state.auth.loggedIn\n    };\n  }),\n      banks = _c.banks,\n      banksCount = _c.banksCount,\n      successfulOperation = _c.successfulOperation,\n      loggedIn = _c.loggedIn;\n\n  var dispatch = react_redux_1.useDispatch(); //const rootDispatcher = new RootDispatcher(dispatch);\n\n  react_1.useEffect(function () {\n    //onFetchBanks?.(pageNo, pageCount);\n    //onFetchBanks!(pageNo, pageCount)\n    dispatch(actions.fetchBanks(pageNo, pageCount));\n  }, [pageNo, pageCount]);\n  react_1.useEffect(function () {\n    dispatch(actions.fetchBanksCount());\n  }, []);\n  react_1.useEffect(function () {\n    setPagesCount(banksCount / pageCount + (banksCount % pageCount === 0 ? 0 : 1));\n  }, [banksCount]);\n  react_1.useEffect(function () {\n    if (successfulOperation) {\n      refreshHandler();\n    }\n  }, [successfulOperation]);\n  var refreshHandler = react_1.useCallback(function () {\n    dispatch(actions.fetchBanks(pageNo, pageCount));\n    dispatch(actions.fetchBanksCount());\n  }, []);\n  var changePageHandler = react_1.useCallback(function (no) {\n    setPageNo(no);\n  }, [setPageNo]);\n  var bankItems = react_1.useMemo(function () {\n    return banks.map(function (bank) {\n      return React.createElement(BankItem_1.default, {\n        key: bank.id,\n        bank: bank\n      });\n    });\n  }, [banks]);\n  var footerContent = banksCount > 0 && React.createElement(\"div\", {\n    className: classes.Counter\n  }, React.createElement(\"div\", null, React.createElement(Pagination_1.default, {\n    pageNo: pageNo,\n    pagesCount: pagesCount,\n    onChange: changePageHandler\n  })), React.createElement(\"div\", {\n    className: \"float-right\"\n  }, React.createElement(\"b\", null, \"Count: \"), React.createElement(\"span\", null, banksCount)));\n  var listContent = banks.length > 0 && banksCount > 0 ? React.createElement(\"div\", {\n    className: \"list-group\"\n  }) : React.createElement(NoBank_1.default, null);\n  return React.createElement(\"div\", {\n    className: classes.BankList\n  }, listContent, React.createElement(\"div\", null, loggedIn && React.createElement(react_router_dom_1.Link, {\n    className: \"btn btn-primary\",\n    to: \"/Banks/new\"\n  }, \"Add\"), React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: refreshHandler\n  }, \"Refresh\")));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    banks: state.bank.banks,\n    banksCount: state.bank.count,\n    successfulOperation: state.common.successfulOperation,\n    loggedIn: state.auth.loggedIn\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchBanks: function onFetchBanks(pageNo, pageCount) {\n      return dispatch(actions.fetchBanks(pageNo, pageCount));\n    },\n    onFetchBanksCount: function onFetchBanksCount() {\n      return dispatch(actions.fetchBanksCount());\n    }\n  };\n};\n\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(BankList);","map":{"version":3,"sources":["BankList.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_1 = require(\"react\");\r\nvar react_router_dom_1 = require(\"react-router-dom\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar classes = require(\"./BankList.module.scss\");\r\nvar BankItem_1 = require(\"../BankItem/BankItem\");\r\nvar NoBank_1 = require(\"../NoBank/NoBank\");\r\nvar actions = require(\"../../../store/actions/bankActions\");\r\nvar Pagination_1 = require(\"../../UI/Pagination/Pagination\");\r\nvar pageCount = 10;\r\n;\r\n//const BankList: FC<Props> = ({ banks, banksCount, successfulOperation, loggedIn, onFetchBanks, onFetchBanksCount }) => {\r\nvar BankList = function () {\r\n    var _a = react_1.useState(1), pageNo = _a[0], setPageNo = _a[1];\r\n    var _b = react_1.useState(1), pagesCount = _b[0], setPagesCount = _b[1];\r\n    //const count = useSelector(state => state.counter.count);\r\n    var _c = react_redux_1.useSelector(function (state) {\r\n        return {\r\n            banks: state.bank.banks,\r\n            banksCount: state.bank.count,\r\n            successfulOperation: state.common.successfulOperation,\r\n            loggedIn: state.auth.loggedIn\r\n        };\r\n    }), banks = _c.banks, banksCount = _c.banksCount, successfulOperation = _c.successfulOperation, loggedIn = _c.loggedIn;\r\n    var dispatch = react_redux_1.useDispatch();\r\n    //const rootDispatcher = new RootDispatcher(dispatch);\r\n    react_1.useEffect(function () {\r\n        //onFetchBanks?.(pageNo, pageCount);\r\n        //onFetchBanks!(pageNo, pageCount)\r\n        dispatch(actions.fetchBanks(pageNo, pageCount));\r\n    }, [pageNo, pageCount]);\r\n    react_1.useEffect(function () {\r\n        dispatch(actions.fetchBanksCount());\r\n    }, []);\r\n    react_1.useEffect(function () {\r\n        setPagesCount((banksCount / pageCount) + ((banksCount % pageCount) === 0 ? 0 : 1));\r\n    }, [banksCount]);\r\n    react_1.useEffect(function () {\r\n        if (successfulOperation) {\r\n            refreshHandler();\r\n        }\r\n    }, [successfulOperation]);\r\n    var refreshHandler = react_1.useCallback(function () {\r\n        dispatch(actions.fetchBanks(pageNo, pageCount));\r\n        dispatch(actions.fetchBanksCount());\r\n    }, []);\r\n    var changePageHandler = react_1.useCallback(function (no) {\r\n        setPageNo(no);\r\n    }, [setPageNo]);\r\n    var bankItems = react_1.useMemo(function () {\r\n        return banks.map(function (bank) {\r\n            return React.createElement(BankItem_1.default, { key: bank.id, bank: bank });\r\n        });\r\n    }, [banks]);\r\n    var footerContent = (banksCount > 0 &&\r\n        React.createElement(\"div\", { className: classes.Counter },\r\n            React.createElement(\"div\", null,\r\n                React.createElement(Pagination_1.default, { pageNo: pageNo, pagesCount: pagesCount, onChange: changePageHandler })),\r\n            React.createElement(\"div\", { className: \"float-right\" },\r\n                React.createElement(\"b\", null, \"Count: \"),\r\n                React.createElement(\"span\", null, banksCount))));\r\n    var listContent = ((banks.length > 0 && banksCount > 0) ?\r\n        React.createElement(\"div\", { className: \"list-group\" })\r\n        : React.createElement(NoBank_1.default, null));\r\n    return (React.createElement(\"div\", { className: classes.BankList },\r\n        listContent,\r\n        React.createElement(\"div\", null,\r\n            loggedIn && React.createElement(react_router_dom_1.Link, { className: \"btn btn-primary\", to: \"/Banks/new\" }, \"Add\"),\r\n            React.createElement(\"button\", { className: \"btn btn-success\", onClick: refreshHandler }, \"Refresh\"))));\r\n};\r\nvar mapStateToProps = function (state) {\r\n    return {\r\n        banks: state.bank.banks,\r\n        banksCount: state.bank.count,\r\n        successfulOperation: state.common.successfulOperation,\r\n        loggedIn: state.auth.loggedIn\r\n    };\r\n};\r\nvar mapDispatchToProps = function (dispatch) {\r\n    return {\r\n        onFetchBanks: function (pageNo, pageCount) { return dispatch(actions.fetchBanks(pageNo, pageCount)); },\r\n        onFetchBanksCount: function () { return dispatch(actions.fetchBanksCount()); },\r\n    };\r\n};\r\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(BankList);\r\n//# sourceMappingURL=BankList.js.map"]},"metadata":{},"sourceType":"module"}