{"ast":null,"code":"import * as actionTypes from './bankActionTypes';\nexport var fetchBanks = function fetchBanks(pageNo, pageCount) {\n  return {\n    type: actionTypes.FETCH_BANKS,\n    pageNo: pageNo,\n    pageCount: pageCount\n  };\n};\nexport var setBanks = function setBanks(banks) {\n  return {\n    type: actionTypes.SET_BANKS,\n    banks: banks\n  };\n};\nexport var resetBanks = function resetBanks() {\n  return {\n    type: actionTypes.RESET_BANKS\n  };\n};\nexport var fetchBanksCount = function fetchBanksCount() {\n  return {\n    type: actionTypes.FETCH_BANKS_COUNT\n  };\n};\nexport var setBanksCount = function setBanksCount(count) {\n  return {\n    type: actionTypes.SET_BANKS_COUNT,\n    count: count\n  };\n};\nexport var fetchBank = function fetchBank(id) {\n  return {\n    type: actionTypes.FETCH_BANK,\n    id: id\n  };\n};\nexport var setBank = function setBank(bank) {\n  return {\n    type: actionTypes.SET_BANK,\n    bank: bank\n  };\n};\nexport var clearSelectedBank = function clearSelectedBank() {\n  return {\n    type: actionTypes.CLEAR_SELECTED_BANK\n  };\n};\nexport var uploadBankLogo = function uploadBankLogo(file, token) {\n  console.log(232323);\n  console.log(file);\n  return {\n    type: actionTypes.UPLOAD_BANK_LOGO,\n    file: file,\n    token: token\n  };\n};\nexport var removeBankLogo = function removeBankLogo(filePath, token) {\n  return {\n    type: actionTypes.REMOVE_BANK_PHOTO,\n    filePath: filePath,\n    token: token\n  };\n};\nexport var saveBank = function saveBank(bank, token) {\n  return {\n    type: actionTypes.SAVE_BANK,\n    bank: bank,\n    token: token\n  };\n};\nexport var deleteBank = function deleteBank(id, token) {\n  return {\n    type: actionTypes.DELETE_BANK,\n    id: id,\n    token: token\n  };\n};","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/store/actions/bankActions.ts"],"names":["actionTypes","fetchBanks","pageNo","pageCount","type","FETCH_BANKS","setBanks","banks","SET_BANKS","resetBanks","RESET_BANKS","fetchBanksCount","FETCH_BANKS_COUNT","setBanksCount","count","SET_BANKS_COUNT","fetchBank","id","FETCH_BANK","setBank","bank","SET_BANK","clearSelectedBank","CLEAR_SELECTED_BANK","uploadBankLogo","file","token","console","log","UPLOAD_BANK_LOGO","removeBankLogo","filePath","REMOVE_BANK_PHOTO","saveBank","SAVE_BANK","deleteBank","DELETE_BANK"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAiBC,SAAjB,EAAuC;AAC7D,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,WADf;AAEHH,IAAAA,MAAM,EAAEA,MAFL;AAGHC,IAAAA,SAAS,EAAEA;AAHR,GAAP;AAKH,CANM;AAQP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmB;AACvC,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC5B,SAAO;AACHL,IAAAA,IAAI,EAAEJ,WAAW,CAACU;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,SAAO;AACHP,IAAAA,IAAI,EAAEJ,WAAW,CAACY;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAmB;AAC5C,SAAO;AACHV,IAAAA,IAAI,EAAEJ,WAAW,CAACe,eADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAgB;AACrC,SAAO;AACHb,IAAAA,IAAI,EAAEJ,WAAW,CAACkB,UADf;AAEHD,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAgB;AACnC,SAAO;AACHhB,IAAAA,IAAI,EAAEJ,WAAW,CAACqB,QADf;AAEHD,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACnC,SAAO;AACHlB,IAAAA,IAAI,EAAEJ,WAAW,CAACuB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAYC,KAAZ,EAA8B;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAO;AACHrB,IAAAA,IAAI,EAAEJ,WAAW,CAAC6B,gBADf;AAEHJ,IAAAA,IAAI,EAAEA,IAFH;AAGHC,IAAAA,KAAK,EAAEA;AAHJ,GAAP;AAKH,CARM;AAUP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAmBL,KAAnB,EAAqC;AAC/D,SAAO;AACHtB,IAAAA,IAAI,EAAEJ,WAAW,CAACgC,iBADf;AAEHD,IAAAA,QAAQ,EAAEA,QAFP;AAGHL,IAAAA,KAAK,EAAEA;AAHJ,GAAP;AAKH,CANM;AAQP,OAAO,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACb,IAAD,EAAaM,KAAb,EAA+B;AACnD,SAAO;AACHtB,IAAAA,IAAI,EAAEJ,WAAW,CAACkC,SADf;AAEHd,IAAAA,IAAI,EAAEA,IAFH;AAGHM,IAAAA,KAAK,EAAEA;AAHJ,GAAP;AAKH,CANM;AAQP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAAClB,EAAD,EAAaS,KAAb,EAA+B;AACrD,SAAO;AACHtB,IAAAA,IAAI,EAAEJ,WAAW,CAACoC,WADf;AAEHnB,IAAAA,EAAE,EAAEA,EAFD;AAGHS,IAAAA,KAAK,EAAEA;AAHJ,GAAP;AAKH,CANM","sourcesContent":["import * as actionTypes from './bankActionTypes';\r\nimport { Bank } from '../../models/Bank.model';\r\n\r\nexport const fetchBanks = (pageNo: number, pageCount: number) => {\r\n    return {\r\n        type: actionTypes.FETCH_BANKS,\r\n        pageNo: pageNo,\r\n        pageCount: pageCount\r\n    };\r\n};\r\n\r\nexport const setBanks = (banks: Bank[]) => {\r\n    return {\r\n        type: actionTypes.SET_BANKS,\r\n        banks: banks\r\n    };\r\n};\r\n\r\nexport const resetBanks = () => {\r\n    return {\r\n        type: actionTypes.RESET_BANKS\r\n    };\r\n};\r\n\r\nexport const fetchBanksCount = () => {\r\n    return {\r\n        type: actionTypes.FETCH_BANKS_COUNT\r\n    };\r\n};\r\n\r\nexport const setBanksCount = (count: number) => {\r\n    return {\r\n        type: actionTypes.SET_BANKS_COUNT,\r\n        count: count\r\n    };\r\n};\r\n\r\nexport const fetchBank = (id: number) => {\r\n    return {\r\n        type: actionTypes.FETCH_BANK,\r\n        id: id\r\n    };\r\n};\r\n\r\nexport const setBank = (bank: Bank) => {\r\n    return {\r\n        type: actionTypes.SET_BANK,\r\n        bank: bank\r\n    };\r\n};\r\n\r\nexport const clearSelectedBank = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_SELECTED_BANK\r\n    };\r\n};\r\n\r\nexport const uploadBankLogo = (file: any, token: string) => {\r\n    console.log(232323);\r\n    console.log(file);\r\n    return {\r\n        type: actionTypes.UPLOAD_BANK_LOGO,\r\n        file: file,\r\n        token: token\r\n    };\r\n};\r\n\r\nexport const removeBankLogo = (filePath: string, token: string) => {\r\n    return {\r\n        type: actionTypes.REMOVE_BANK_PHOTO,\r\n        filePath: filePath,\r\n        token: token\r\n    };\r\n};\r\n\r\nexport const saveBank = (bank: Bank, token: string) => {\r\n    return {\r\n        type: actionTypes.SAVE_BANK,\r\n        bank: bank,\r\n        token: token\r\n    };\r\n};\r\n\r\nexport const deleteBank = (id: number, token: string) => {\r\n    return {\r\n        type: actionTypes.DELETE_BANK,\r\n        id: id,\r\n        token: token\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}