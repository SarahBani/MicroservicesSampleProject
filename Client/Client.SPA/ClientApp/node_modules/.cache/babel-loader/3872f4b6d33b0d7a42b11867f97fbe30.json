{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\Microservices\\\\MicroservicesSampleProject\\\\Client\\\\Client.SPA\\\\ClientApp\\\\src\\\\components\\\\Banks\\\\Banks.tsx\",\n    _this = this;\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useParams } from 'react-router';\nimport PageTitle from '../UI/PageTitle/PageTitle';\nimport BankDetail from './BankDetail/BankDetail';\nimport BankEdit from './BankEdit/BankEdit';\nimport BankList from './BankList/BankList';\nimport BankNew from './BankNew/BankNew';\nimport SelectBank from './SelectBank/SelectBank';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//const Banks: FC<{ add?: boolean }> = ({ add }) => {\nvar Banks = function Banks(_ref) {\n  var add = _ref.add;\n\n  var _useParams = useParams(),\n      id = _useParams.id,\n      action = _useParams.action;\n\n  var detailContent = useMemo(function () {\n    if (action) {\n      if (action.toLowerCase() === 'edit') {\n        return /*#__PURE__*/_jsxDEV(BankEdit, {\n          id: parseInt(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 24\n        }, _this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(BankDetail, {\n          id: parseInt(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, _this);\n      }\n    } else if (id) {\n      return /*#__PURE__*/_jsxDEV(BankDetail, {\n        id: parseInt(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, _this);\n    } else if (add) {\n      return /*#__PURE__*/_jsxDEV(BankNew, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, _this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(SelectBank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, _this);\n    }\n  }, [id, action, add]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"Banks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7\",\n        children: /*#__PURE__*/_jsxDEV(BankList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5\",\n        children: detailContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\n\nexport default withErrorHandler(Banks);","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/components/Banks/Banks.tsx"],"names":["React","useMemo","useParams","PageTitle","BankDetail","BankEdit","BankList","BankNew","SelectBank","withErrorHandler","Banks","add","id","action","detailContent","toLowerCase","parseInt"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAaC,OAAb,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;;;AAMA;AACA,IAAMC,KAAgB,GAAG,SAAnBA,KAAmB,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAElC,mBAAuBT,SAAS,EAAhC;AAAA,MAAQU,EAAR,cAAQA,EAAR;AAAA,MAAYC,MAAZ,cAAYA,MAAZ;;AAEA,MAAMC,aAAa,GAAGb,OAAO,CAAC,YAAM;AAChC,QAAIY,MAAJ,EAAY;AACR,UAAIA,MAAM,CAACE,WAAP,OAAyB,MAA7B,EAAqC;AACjC,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAEC,QAAQ,CAACJ,EAAD;AAAtB;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH,OAFD,MAGK;AACD,4BAAO,QAAC,UAAD;AAAY,UAAA,EAAE,EAAEI,QAAQ,CAACJ,EAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;AACJ,KAPD,MAQK,IAAIA,EAAJ,EAAQ;AACT,0BAAO,QAAC,UAAD;AAAY,QAAA,EAAE,EAAEI,QAAQ,CAACJ,EAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFI,MAGA,IAAID,GAAJ,EAAS;AACV,0BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFI,MAGA;AACD,0BAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,eAAP;AACH;AACJ,GAlB4B,EAkB1B,CAACC,EAAD,EAAKC,MAAL,EAAaF,GAAb,CAlB0B,CAA7B;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAII;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACKG;AADL;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CArCD;;AAuCA,eAAeL,gBAAgB,CAACC,KAAD,CAA/B","sourcesContent":["import * as React from 'react';\r\nimport { FC, useMemo } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport PageTitle from '../UI/PageTitle/PageTitle';\r\nimport BankDetail from './BankDetail/BankDetail';\r\nimport BankEdit from './BankEdit/BankEdit';\r\nimport BankList from './BankList/BankList';\r\nimport BankNew from './BankNew/BankNew';\r\nimport SelectBank from './SelectBank/SelectBank';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\ninterface Props {\r\n    add: boolean\r\n}\r\n\r\n//const Banks: FC<{ add?: boolean }> = ({ add }) => {\r\nconst Banks: FC<Props> = ({ add }) => {\r\n\r\n    const { id, action } = useParams<{ id: string, action: string }>();\r\n\r\n    const detailContent = useMemo(() => {\r\n        if (action) {\r\n            if (action.toLowerCase() === 'edit') {\r\n                return <BankEdit id={parseInt(id)} />;\r\n            }\r\n            else {\r\n                return <BankDetail id={parseInt(id)} />;\r\n            }\r\n        }\r\n        else if (id) {\r\n            return <BankDetail id={parseInt(id)} />;\r\n        }\r\n        else if (add) {\r\n            return <BankNew />;\r\n        }\r\n        else {\r\n            return <SelectBank />;\r\n        }\r\n    }, [id, action, add]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <PageTitle title=\"Banks\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <BankList />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                    {detailContent}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withErrorHandler(Banks);"]},"metadata":{},"sourceType":"module"}