{"ast":null,"code":"import _slicedToArray from \"H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"H:\\\\Project\\\\Microservices\\\\MicroservicesSampleProject\\\\Client\\\\Client.SPA\\\\ClientApp\\\\src\\\\components\\\\Banks\\\\BankDetail\\\\BankDetail.tsx\",\n    _this = this;\n\nimport * as React from 'react';\nimport { useState, useEffect, useCallback, useMemo, Fragment, memo } from 'react';\nimport { Redirect, useParams, useHistory } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as classes from './BankDetail.module.scss';\nimport ConfirmDelete from '../../UI/ConfirmDelete/ConfirmDelete';\nimport { FailedOperationEnum, SuccessfulOperationEnum, ModalTypeEnum } from '../../../shared/enums';\nimport * as actions from '../../../store/actions/bankActions';\nimport Modal from '../../UI/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nvar BankDetail = /*#__PURE__*/memo(function (_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      bank: state.bank.selectedBank,\n      successfulOperation: state.common.successfulOperation,\n      failedOperation: state.common.failedOperation,\n      loggedIn: state.auth.loggedIn,\n      token: state.auth.token,\n      error: state.common.error\n    };\n  }),\n      bank = _useSelector.bank,\n      successfulOperation = _useSelector.successfulOperation,\n      failedOperation = _useSelector.failedOperation,\n      loggedIn = _useSelector.loggedIn,\n      token = _useSelector.token;\n\n  var dispatch = useDispatch();\n\n  var _useParams = useParams(),\n      action = _useParams.action;\n\n  var history = useHistory();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      redirect = _useState2[0],\n      setRedirect = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDeleteConfirmShown = _useState4[0],\n      setShowDeleteConfirm = _useState4[1];\n\n  useEffect(function () {\n    dispatch(actions.fetchBank(id));\n  }, [id]);\n  useEffect(function () {\n    if (failedOperation && failedOperation === FailedOperationEnum.FetchBank) {\n      cancelHandler();\n    }\n  }, [failedOperation]);\n  useEffect(function () {\n    if (!action && successfulOperation === SuccessfulOperationEnum.Delete) {\n      cancelHandler();\n    }\n  }, [successfulOperation]);\n  var cancelHandler = useCallback(function () {\n    dispatch(actions.clearSelectedBank());\n    setRedirect( /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Banks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, _this));\n  }, [setRedirect]);\n  var editHandler = useCallback(function () {\n    history.push(\"/Banks/\".concat(id, \"/edit\"));\n  }, [id, history]);\n  var deleteConfirmContent = useMemo(function () {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isShown: isDeleteConfirmShown,\n      type: ModalTypeEnum.Component,\n      children: /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n        onOK: function onOK() {\n          return confirmDeleteHandler(true);\n        },\n        onCancel: function onCancel() {\n          return confirmDeleteHandler(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, _this);\n  }, [isDeleteConfirmShown]);\n  var deleteHandler = useCallback(function () {\n    setShowDeleteConfirm(true);\n  }, [setShowDeleteConfirm]);\n  var confirmDeleteHandler = useCallback(function (isConfirmed) {\n    if (isConfirmed) {\n      dispatch(actions.deleteBank(id, token));\n    }\n\n    setShowDeleteConfirm(false);\n  }, [id, token, setShowDeleteConfirm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.BankDetail,\n    children: [redirect, deleteConfirmContent, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: bank === null || bank === void 0 ? void 0 : bank.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: cancelHandler,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary dropdown-toggle\",\n            type: \"button\",\n            \"data-bs-toggle\": \"dropdown\",\n            disabled: !loggedIn,\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-menu\",\n            children: !!loggedIn && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                onClick: editHandler,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                onClick: deleteHandler,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, _this);\n});\nexport default BankDetail;","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/components/Banks/BankDetail/BankDetail.tsx"],"names":["React","useState","useEffect","useCallback","useMemo","Fragment","memo","Redirect","useParams","useHistory","useDispatch","useSelector","classes","ConfirmDelete","FailedOperationEnum","SuccessfulOperationEnum","ModalTypeEnum","actions","Modal","BankDetail","id","state","bank","selectedBank","successfulOperation","common","failedOperation","loggedIn","auth","token","error","dispatch","action","history","redirect","setRedirect","isDeleteConfirmShown","setShowDeleteConfirm","fetchBank","FetchBank","cancelHandler","Delete","clearSelectedBank","editHandler","push","deleteConfirmContent","Component","confirmDeleteHandler","deleteHandler","isConfirmed","deleteBank","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect, useCallback, useMemo, Fragment, memo, FC, ReactElement } from 'react';\r\nimport { Redirect, useParams, useHistory } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport * as classes from './BankDetail.module.scss';\r\nimport ConfirmDelete from '../../UI/ConfirmDelete/ConfirmDelete';\r\nimport { FailedOperationEnum, SuccessfulOperationEnum, ModalTypeEnum } from '../../../shared/enums';\r\nimport * as actions from '../../../store/actions/bankActions';\r\nimport { AppState } from '../../../store';\r\nimport { Bank } from '../../../models/Bank.model';\r\nimport Modal from '../../UI/Modal/Modal';\r\n\r\ninterface Props {\r\n    id: number,\r\n}\r\n\r\ninterface StoreProps {\r\n    bank: Bank,\r\n    successfulOperation: SuccessfulOperationEnum,\r\n    failedOperation: FailedOperationEnum,\r\n    loggedIn: boolean,\r\n    token: string,\r\n    error: string,\r\n};\r\n\r\nconst BankDetail: FC<Props> = memo(({ id }) => {\r\n\r\n    const { bank, successfulOperation, failedOperation, loggedIn, token }: StoreProps =\r\n        useSelector((state: AppState) => ({\r\n            bank: state.bank.selectedBank,\r\n            successfulOperation: state.common.successfulOperation,\r\n            failedOperation: state.common.failedOperation,\r\n            loggedIn: state.auth.loggedIn,\r\n            token: state.auth.token,\r\n            error: state.common.error\r\n        }));\r\n    const dispatch = useDispatch();\r\n\r\n    const { action } = useParams<{ action: string }>();\r\n    const history = useHistory();\r\n    const [redirect, setRedirect] = useState<ReactElement>();\r\n    const [isDeleteConfirmShown, setShowDeleteConfirm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.fetchBank(id));\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (failedOperation && failedOperation === FailedOperationEnum.FetchBank) {\r\n            cancelHandler();\r\n        }\r\n    }, [failedOperation]);\r\n\r\n    useEffect(() => {\r\n        if (!action && successfulOperation === SuccessfulOperationEnum.Delete) {\r\n            cancelHandler();\r\n        }\r\n    }, [successfulOperation]);\r\n\r\n    const cancelHandler = useCallback(() => {\r\n        dispatch(actions.clearSelectedBank());\r\n        setRedirect(<Redirect to=\"/Banks\" />);\r\n    }, [setRedirect]);\r\n\r\n    const editHandler = useCallback(() => {\r\n        history.push(`/Banks/${id}/edit`);\r\n    }, [id, history]);\r\n\r\n    const deleteConfirmContent = useMemo(() => {\r\n        return (\r\n            <Modal isShown={isDeleteConfirmShown} type={ModalTypeEnum.Component}>\r\n                <ConfirmDelete onOK={() => confirmDeleteHandler(true)}\r\n                    onCancel={() => confirmDeleteHandler(false)} />\r\n            </Modal>\r\n        );\r\n    }, [isDeleteConfirmShown]);\r\n\r\n    const deleteHandler = useCallback(() => {\r\n        setShowDeleteConfirm(true);\r\n    }, [setShowDeleteConfirm]);\r\n\r\n    const confirmDeleteHandler = useCallback((isConfirmed) => {\r\n        if (isConfirmed) {\r\n            dispatch(actions.deleteBank(id, token));\r\n        }\r\n        setShowDeleteConfirm(false);\r\n    }, [id, token, setShowDeleteConfirm]);\r\n\r\n    return (\r\n        <div className={classes.BankDetail}>\r\n            {redirect}\r\n            {deleteConfirmContent}\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h4>{bank?.name}</h4>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"btn-group\">\r\n                        <button className=\"btn btn-primary\" onClick={cancelHandler}>\r\n                            Back\r\n                        </button>\r\n                        <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" disabled={!loggedIn} >\r\n                            Manage\r\n                        </button>\r\n                        <ul className=\"dropdown-menu\">\r\n                            {!!loggedIn && (\r\n                                <Fragment>\r\n                                    <a className=\"dropdown-item\" onClick={editHandler}>Edit</a>\r\n                                    <a className=\"dropdown-item\" onClick={deleteHandler}>Delete</a>\r\n                                </Fragment>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default BankDetail;"]},"metadata":{},"sourceType":"module"}