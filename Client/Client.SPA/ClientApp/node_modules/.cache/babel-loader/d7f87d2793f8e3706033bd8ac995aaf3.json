{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.store = void 0;\n\nvar WeatherForecasts = require(\"./WeatherForecasts\");\n\nvar Counter = require(\"./Counter\");\n\nvar authReducer_1 = require(\"./reducers/authReducer\");\n\nvar commonReducer_1 = require(\"./reducers/commonReducer\");\n\nvar bankReducer_1 = require(\"./reducers/bankReducer\");\n\nvar configureStore_1 = require(\"./configureStore\");\n\nvar redux_saga_1 = require(\"redux-saga\"); // Whenever an action is dispatched, Redux will update each top-level application state property using\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\n// acts on the corresponding ApplicationState property type.\n\n\nvar reducers = {\n  counter: Counter.reducer,\n  weatherForecasts: WeatherForecasts.reducer,\n  common: commonReducer_1.default,\n  auth: authReducer_1.default,\n  //location: locationReducer,\n  bank: bankReducer_1.default //upload: uploadReducer\n\n};\nvar sagaMiddleware = redux_saga_1.default();\nexports.store = configureStore_1.default( //{\n////reducer: {\n////    auth: authReducer,\n////    common: commonReducer,\n////    bank: bankReducer,\n////},\n//}\nreducers, sagaMiddleware);","map":{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,YAAA,CAAA,C,CAYA;AACA;AACA;;;AACA,IAAM,QAAQ,GAAG;AACb,EAAA,OAAO,EAAE,OAAO,CAAC,OADJ;AAEb,EAAA,gBAAgB,EAAE,gBAAgB,CAAC,OAFtB;AAIb,EAAA,MAAM,EAAE,eAAA,CAAA,OAJK;AAKb,EAAA,IAAI,EAAE,aAAA,CAAA,OALO;AAMb;AACA,EAAA,IAAI,EAAE,aAAA,CAAA,OAPO,CAQb;;AARa,CAAjB;AAmBA,IAAM,cAAc,GAAG,YAAA,CAAA,OAAA,EAAvB;AAEa,OAAA,CAAA,KAAA,GAAQ,gBAAA,CAAA,OAAA,EACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QARiB,EASjB,cATiB,CAAR","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.store = void 0;\r\nvar WeatherForecasts = require(\"./WeatherForecasts\");\r\nvar Counter = require(\"./Counter\");\r\nvar authReducer_1 = require(\"./reducers/authReducer\");\r\nvar commonReducer_1 = require(\"./reducers/commonReducer\");\r\nvar bankReducer_1 = require(\"./reducers/bankReducer\");\r\nvar configureStore_1 = require(\"./configureStore\");\r\nvar redux_saga_1 = require(\"redux-saga\");\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nvar reducers = {\r\n    counter: Counter.reducer,\r\n    weatherForecasts: WeatherForecasts.reducer,\r\n    common: commonReducer_1.default,\r\n    auth: authReducer_1.default,\r\n    //location: locationReducer,\r\n    bank: bankReducer_1.default,\r\n    //upload: uploadReducer\r\n};\r\nvar sagaMiddleware = redux_saga_1.default();\r\nexports.store = configureStore_1.default(\r\n//{\r\n////reducer: {\r\n////    auth: authReducer,\r\n////    common: commonReducer,\r\n////    bank: bankReducer,\r\n////},\r\n//}\r\nreducers, sagaMiddleware);\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}