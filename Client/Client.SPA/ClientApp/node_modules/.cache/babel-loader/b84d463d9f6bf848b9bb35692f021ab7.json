{"ast":null,"code":"import _objectSpread from \"H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { browserHistory } from '../browserHistory';\nexport default function configureStore(reducers, sagaMiddleware) {\n  var middleware = [thunk, sagaMiddleware, routerMiddleware(browserHistory)];\n  var rootReducer = combineReducers(_objectSpread(_objectSpread({}, reducers), {}, {\n    router: connectRouter(browserHistory)\n  })); //const enhancers = [];\n  //const windowIfDefined = typeof window === 'undefined' ? null : window as any;\n  //if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\n  //    enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\n  //}\n\n  var composeEnhancers = window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(rootReducer, composeEnhancers(applyMiddleware.apply(void 0, middleware)));\n}","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/store/configureStore.ts"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","connectRouter","routerMiddleware","browserHistory","configureStore","reducers","sagaMiddleware","middleware","rootReducer","router","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAA8E,OAA9E;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AAGA,SAASC,cAAT,QAA+B,mBAA/B;AAGA,eAAe,SAASC,cAAT,CAAwBC,QAAxB,EAAuCC,cAAvC,EAA8E;AACzF,MAAMC,UAAU,GAAG,CACfP,KADe,EAEfM,cAFe,EAGfJ,gBAAgB,CAACC,cAAD,CAHD,CAAnB;AAMA,MAAMK,WAAW,GAAGX,eAAe,iCAC5BQ,QAD4B;AAE/BI,IAAAA,MAAM,EAAER,aAAa,CAACE,cAAD;AAFU,KAAnC,CAPyF,CAYzF;AACA;AACA;AACA;AACA;;AACA,MAAMO,gBAAgB,GACjBC,MAAM,IAAKA,MAAD,CAAgBC,oCAA3B,IAAoEd,OADxE;AAGA,SAAOC,WAAW,CACdS,WADc,EAEdE,gBAAgB,CAACd,eAAe,MAAf,SAAmBW,UAAnB,CAAD,CAFF,CAAlB;AAIH","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { SagaMiddleware } from 'redux-saga';\r\n\r\nimport { browserHistory } from '../browserHistory';\r\n\r\n\r\nexport default function configureStore(reducers: any, sagaMiddleware: SagaMiddleware): Store {\r\n    const middleware = [\r\n        thunk,\r\n        sagaMiddleware,\r\n        routerMiddleware(browserHistory),\r\n    ];\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        router: connectRouter(browserHistory)\r\n    });\r\n\r\n    //const enhancers = [];\r\n    //const windowIfDefined = typeof window === 'undefined' ? null : window as any;\r\n    //if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    //    enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    //}\r\n    const composeEnhancers =\r\n        (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        composeEnhancers(applyMiddleware(...middleware))\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}