{"ast":null,"code":"import _slicedToArray from \"H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"H:\\\\Project\\\\Microservices\\\\MicroservicesSampleProject\\\\Client\\\\Client.SPA\\\\ClientApp\\\\src\\\\components\\\\UI\\\\DropDown\\\\DropDown.tsx\",\n    _this = this;\n\nimport * as React from 'react';\nimport { useState, useEffect, useMemo, useCallback, useRef, Fragment } from 'react';\nimport * as classes from './DropDown.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nvar DropDown = function DropDown(props) {\n  var _selectedItem$text;\n\n  var initialItem = {\n    value: '',\n    text: props.placeholder ? '--- Select ' + props.placeholder + ' ---' : '------'\n  };\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItem = _useState2[0],\n      setSelectedItem = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      label = _useState4[0],\n      setLabel = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      idAttribute = _useState6[0],\n      setIdAttribute = _useState6[1];\n\n  var itemListControl = useRef();\n  var listItems = useMemo(function () {\n    var _props$data;\n\n    var list = (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: ['dropdown-item', (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.value) === item.value ? classes.SelecedItem : ''].join(' '),\n        id: item.value,\n        onClick: function onClick() {\n          return selectHandler(item);\n        },\n        children: [item.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 35\n        }, _this), item.text]\n      }, item.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, _this);\n    });\n    list === null || list === void 0 ? void 0 : list.unshift( /*#__PURE__*/_jsxDEV(\"li\", {\n      className: ['dropdown-item', !selectedItem ? classes.SelecedItem : ''].join(' '),\n      id: initialItem.value,\n      onClick: function onClick() {\n        return selectHandler(initialItem);\n      }\n      /*style={{ paddingLeft: '30px' }}*/\n      ,\n      children: initialItem.text\n    }, initialItem.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this));\n    return list;\n  }, [props.data, selectedItem]);\n  useEffect(function () {\n    var _props$data2;\n\n    if (((_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.length) === 0) {\n      setSelectedItem(null);\n    } else {\n      if (props.value != '') {\n        var _props$data3;\n\n        var item = (_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.filter(function (q) {\n          return q.value === props.value;\n        })[0];\n        setSelectedItem(item);\n      } else {\n        setSelectedItem(null);\n      }\n    }\n  }, [props.data]);\n  useEffect(function () {\n    if (props.title) {\n      setLabel( /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.title,\n        children: [props.title, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 22\n      }, _this));\n      setIdAttribute(\" id='\".concat(props.title, \"' \"));\n    }\n  }, [props.title]);\n  var selectHandler = useCallback(function (item) {\n    setSelectedItem(item);\n    props.onSelect(item === null || item === void 0 ? void 0 : item.id);\n  }, [props.onSelect, setSelectedItem]);\n  var filterHandler = useCallback(function (event) {\n    var _props$data4;\n\n    var key = event.key.toLowerCase();\n    var filteredData = (_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : _props$data4.filter(function (q) {\n      return q.text.toLowerCase().startsWith(key);\n    });\n\n    if (filteredData.length > 0) {\n      var uiElement = itemListControl.current;\n      var liElement = uiElement.querySelector(\"li[id=\\\"\".concat(filteredData[0].value, \"\\\"]\"));\n      uiElement.scrollTop = liElement.offsetTop;\n    }\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [label, /*#__PURE__*/_jsxDEV(\"div\", {\n      id: props.id,\n      className: [\"dropdown\", classes.DropDown, props.className].join(' '),\n      onKeyDown: function onKeyDown(event) {\n        return filterHandler(event);\n      },\n      onBlur: props.onBlur,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn dropdown-toggle\",\n        \"data-toggle\": \"dropdown\",\n        disabled: props.disabled,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_selectedItem$text = selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.text) !== null && _selectedItem$text !== void 0 ? _selectedItem$text : initialItem.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: itemListControl,\n        className: \"dropdown-menu\",\n        children: listItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, _this);\n};\n\nexport default DropDown;","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/components/UI/DropDown/DropDown.tsx"],"names":["React","useState","useEffect","useMemo","useCallback","useRef","Fragment","classes","DropDown","props","initialItem","value","text","placeholder","selectedItem","setSelectedItem","label","setLabel","idAttribute","setIdAttribute","itemListControl","listItems","list","data","map","item","SelecedItem","join","selectHandler","imageUrl","unshift","length","filter","q","title","onSelect","id","filterHandler","event","key","toLowerCase","filteredData","startsWith","uiElement","current","liElement","querySelector","scrollTop","offsetTop","className","onBlur","disabled"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect, useMemo, useCallback, useRef, Fragment, FC, ReactElement, FocusEventHandler, MutableRefObject } from 'react';\r\n\r\nimport * as classes from './DropDown.module.scss';\r\nimport { DropDownItem } from '../../../shared/types';\r\n\r\ninterface Props {\r\n    id?: string,\r\n    data: DropDownItem[],\r\n    value: string,\r\n    title?: string,\r\n    placeholder?: string,\r\n    disabled?: boolean,\r\n    className?: string,\r\n    onSelect: (id: string) => void,\r\n    onBlur?: FocusEventHandler\r\n};\r\n\r\nconst DropDown: FC<Props> = (props) => {\r\n\r\n    const initialItem: DropDownItem = {\r\n        value: '',\r\n        text: props.placeholder ? ('--- Select ' + props.placeholder + ' ---') : '------'\r\n    };\r\n    const [selectedItem, setSelectedItem] = useState<DropDownItem | null>();\r\n    const [label, setLabel] = useState<ReactElement | null>();\r\n    const [idAttribute, setIdAttribute] = useState<string | null>();\r\n    const itemListControl: MutableRefObject<HTMLUListElement> = useRef<HTMLUListElement>() as MutableRefObject<HTMLUListElement>;\r\n\r\n    const listItems = useMemo(() => {\r\n        const list: ReactElement[] = props.data?.map(item =>\r\n            <li className={['dropdown-item', (selectedItem?.value === item.value ? classes.SelecedItem : '')].join(' ')}\r\n                key={item.value} id={item.value} onClick={() => selectHandler(item)}>\r\n                {item.imageUrl && <img src={item.imageUrl} />}\r\n                {item.text}\r\n            </li>);\r\n        list?.unshift(\r\n            <li className={['dropdown-item', (!selectedItem ? classes.SelecedItem : '')].join(' ')}\r\n                key={initialItem.value} id={initialItem.value} onClick={() => selectHandler(initialItem)}\r\n            /*style={{ paddingLeft: '30px' }}*/ >\r\n                {initialItem.text}\r\n            </li>);\r\n        return list;\r\n    }, [props.data, selectedItem]);\r\n\r\n    useEffect(() => {\r\n        if (props.data?.length === 0) {\r\n            setSelectedItem(null);\r\n        }\r\n        else {\r\n            if (props.value != '') {\r\n                const item: DropDownItem = props.data?.filter(q => q.value === props.value)[0];\r\n                setSelectedItem(item);\r\n            }\r\n            else {\r\n                setSelectedItem(null);\r\n            }\r\n        }\r\n    }, [props.data]);\r\n\r\n    useEffect(() => {\r\n        if (props.title) {\r\n            setLabel(<label htmlFor={props.title}>{props.title}: </label>);\r\n            setIdAttribute(` id='${props.title}' `);\r\n        }\r\n    }, [props.title]);\r\n\r\n    const selectHandler = useCallback((item) => {\r\n        setSelectedItem(item);\r\n        props.onSelect(item?.id);\r\n    }, [props.onSelect, setSelectedItem]);\r\n\r\n    const filterHandler = useCallback((event: any) => {\r\n        const key: string = event.key.toLowerCase();\r\n        const filteredData: DropDownItem[] = props.data?.filter(q => q.text.toLowerCase().startsWith(key))\r\n        if (filteredData.length > 0) {\r\n            const uiElement: HTMLUListElement = itemListControl.current;\r\n            const liElement: HTMLLIElement = uiElement.querySelector(`li[id=\"${filteredData[0].value}\"]`)!;\r\n            uiElement.scrollTop = liElement.offsetTop;\r\n        }\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {label}\r\n            <div id={props.id} className={[\"dropdown\", classes.DropDown, props.className].join(' ')}\r\n                onKeyDown={(event: any) => filterHandler(event)}\r\n                onBlur={props.onBlur}>\r\n                <button type=\"button\" className=\"btn dropdown-toggle\"\r\n                    data-toggle=\"dropdown\" disabled={props.disabled}>\r\n                    <div>{selectedItem?.text ?? initialItem.text}</div>\r\n                </button>\r\n                <ul ref={itemListControl} className=\"dropdown-menu\">\r\n                    {listItems}\r\n                </ul>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}