{"ast":null,"code":"import _objectSpread from \"H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"H:\\\\Project\\\\Microservices\\\\MicroservicesSampleProject\\\\Client\\\\Client.SPA\\\\ClientApp\\\\src\\\\hoc\\\\withErrorHandler\\\\withErrorHandler.tsx\",\n    _this = this;\n\nimport * as React from 'react';\nimport { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../../components/UI/Modal/Modal';\nimport useHttpErrorHandler from '../../hooks/http-error-handler';\nimport * as actions from '../../store/actions/commonActions';\nimport { ModalTypeEnum } from '../../shared/enums';\nimport axiosInstance from '../../shared/axios-instance';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nvar withErrorHandler = function withErrorHandler(WrappedComponent) {\n  return function (props) {\n    var _useSelector = useSelector(function (state) {\n      return {\n        customError: state.common.error\n      };\n    }),\n        customError = _useSelector.customError;\n\n    var dispatch = useDispatch();\n\n    var _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n    var _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorType = _useState4[0],\n        setErrorType = _useState4[1];\n\n    var _useHttpErrorHandler = useHttpErrorHandler(axiosInstance),\n        _useHttpErrorHandler2 = _slicedToArray(_useHttpErrorHandler, 2),\n        axiosError = _useHttpErrorHandler2[0],\n        axiosClearErrorHandler = _useHttpErrorHandler2[1];\n\n    useEffect(function () {\n      if (axiosError) {\n        setError(axiosError);\n        setErrorType(ModalTypeEnum.Error);\n      } else if (customError) {\n        setError(customError);\n        setErrorType(ModalTypeEnum.Warning);\n      } else {\n        setError(null);\n      } //cleanup function:\n\n\n      return function () {\n        setError(null);\n      };\n    }, [axiosError, customError, setError]);\n    var onHideErrorHandler = useCallback(function () {\n      if (axiosError) {\n        axiosClearErrorHandler();\n      }\n\n      dispatch(actions.clearError());\n    }, [axiosError, axiosClearErrorHandler]);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        type: errorType,\n        isShown: !!error,\n        onHide: onHideErrorHandler,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, _this);\n  };\n};\n\nexport default (function (WrappedComponent) {\n  return withErrorHandler(WrappedComponent);\n});","map":{"version":3,"sources":["H:/Project/Microservices/MicroservicesSampleProject/Client/Client.SPA/ClientApp/src/hoc/withErrorHandler/withErrorHandler.tsx"],"names":["React","Fragment","useState","useEffect","useDispatch","useSelector","Modal","useHttpErrorHandler","actions","ModalTypeEnum","axiosInstance","useCallback","withErrorHandler","WrappedComponent","props","state","customError","common","error","dispatch","setError","errorType","setErrorType","axiosError","axiosClearErrorHandler","Error","Warning","onHideErrorHandler","clearError"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8E,OAA9E;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,mCAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAIC;;AAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,gBAAD,EAA+B;AAEpD,SAAO,UAACC,KAAD,EAAgB;AAEnB,uBAAoCT,WAAW,CAAC,UAACU,KAAD;AAAA,aAAsB;AAClEC,QAAAA,WAAW,EAAED,KAAK,CAACE,MAAN,CAAaC;AADwC,OAAtB;AAAA,KAAD,CAA/C;AAAA,QAAQF,WAAR,gBAAQA,WAAR;;AAGA,QAAMG,QAAQ,GAAGf,WAAW,EAA5B;;AACA,oBAA0BF,QAAQ,EAAlC;AAAA;AAAA,QAAOgB,KAAP;AAAA,QAAcE,QAAd;;AACA,qBAAkClB,QAAQ,EAA1C;AAAA;AAAA,QAAOmB,SAAP;AAAA,QAAkBC,YAAlB;;AACA,+BAA6Cf,mBAAmB,CAACG,aAAD,CAAhE;AAAA;AAAA,QAAOa,UAAP;AAAA,QAAmBC,sBAAnB;;AAEArB,IAAAA,SAAS,CAAC,YAAM;AACZ,UAAIoB,UAAJ,EAAgB;AACZH,QAAAA,QAAQ,CAACG,UAAD,CAAR;AACAD,QAAAA,YAAY,CAACb,aAAa,CAACgB,KAAf,CAAZ;AACH,OAHD,MAIK,IAAIT,WAAJ,EAAiB;AAClBI,QAAAA,QAAQ,CAACJ,WAAD,CAAR;AACAM,QAAAA,YAAY,CAACb,aAAa,CAACiB,OAAf,CAAZ;AACH,OAHI,MAIA;AACDN,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXW,CAYZ;;;AACA,aAAO,YAAM;AACTA,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAFD;AAGH,KAhBQ,EAgBN,CAACG,UAAD,EAAaP,WAAb,EAA0BI,QAA1B,CAhBM,CAAT;AAkBA,QAAMO,kBAAkB,GAAGhB,WAAW,CAAC,YAAM;AACzC,UAAIY,UAAJ,EAAgB;AACZC,QAAAA,sBAAsB;AACzB;;AACDL,MAAAA,QAAQ,CAACX,OAAO,CAACoB,UAAR,EAAD,CAAR;AACH,KALqC,EAKnC,CAACL,UAAD,EAAaC,sBAAb,CALmC,CAAtC;AAOA,wBACI,QAAC,QAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEH,SAAb;AAAyC,QAAA,OAAO,EAAE,CAAC,CAACH,KAApD;AAA2D,QAAA,MAAM,EAAES,kBAAnE;AAAA,kBACKT;AADL;AAAA;AAAA;AAAA;AAAA,eADJ,eAII,QAAC,gBAAD,oBAAsBJ,KAAtB;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AASH,GA5CD;AA6CH,CA/CD;;AAiDA,gBAAe,UAACD,gBAAD;AAAA,SAA+BD,gBAAgB,CAACC,gBAAD,CAA/C;AAAA,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { Fragment, useState, useEffect, FC, useMemo, MouseEventHandler } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport useHttpErrorHandler from '../../hooks/http-error-handler';\r\nimport * as actions from '../../store/actions/commonActions';\r\nimport { ModalTypeEnum } from '../../shared/enums';\r\nimport { AppState } from '../../store';\r\nimport axiosInstance from '../../shared/axios-instance';\r\nimport { useCallback } from 'react';\r\n\r\ninterface StoreProps {\r\n    customError: string\r\n};\r\n\r\nconst withErrorHandler = (WrappedComponent: FC<any>) => {\r\n\r\n    return (props: any) => {\r\n\r\n        const { customError }: StoreProps = useSelector((state: AppState) => ({\r\n            customError: state.common.error\r\n        }));\r\n        const dispatch = useDispatch();\r\n        const [error, setError] = useState<string | null>();\r\n        const [errorType, setErrorType] = useState<ModalTypeEnum>();\r\n        const [axiosError, axiosClearErrorHandler] = useHttpErrorHandler(axiosInstance);\r\n\r\n        useEffect(() => {\r\n            if (axiosError) {\r\n                setError(axiosError);\r\n                setErrorType(ModalTypeEnum.Error);\r\n            }\r\n            else if (customError) {\r\n                setError(customError);\r\n                setErrorType(ModalTypeEnum.Warning);\r\n            }\r\n            else {\r\n                setError(null);\r\n            }\r\n            //cleanup function:\r\n            return () => {\r\n                setError(null);\r\n            }\r\n        }, [axiosError, customError, setError]);\r\n\r\n        const onHideErrorHandler = useCallback(() => {\r\n            if (axiosError) {\r\n                axiosClearErrorHandler();\r\n            }\r\n            dispatch(actions.clearError());\r\n        }, [axiosError, axiosClearErrorHandler]);\r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal type={errorType as ModalTypeEnum} isShown={!!error} onHide={onHideErrorHandler} >\r\n                    {error}\r\n                </Modal>\r\n                <WrappedComponent {...props} />\r\n            </Fragment>\r\n        );\r\n\r\n    };\r\n};\r\n\r\nexport default (WrappedComponent: FC<any>) => withErrorHandler(WrappedComponent);"]},"metadata":{},"sourceType":"module"}