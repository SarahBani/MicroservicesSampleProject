{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire(\"bootstrap/dist/css/bootstrap.css\");\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar connected_react_router_1 = require(\"connected-react-router\");\n\nvar history_1 = require(\"history\");\n\nvar configureStore_1 = require(\"./store/configureStore\");\n\nvar App_1 = require(\"./components/App\");\n\nvar registerServiceWorker_1 = require(\"./registerServiceWorker\"); // Create browser history to use in the Redux store\n\n\nvar baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nvar history = history_1.createBrowserHistory();\nvar rootElement = document.getElementById('root'); // Get the application-wide store instance, prepopulating with state from the server where available.\n\nvar store = configureStore_1.default(history);\nReactDOM.render(React.createElement(react_redux_1.Provider, {\n  store: store\n}, React.createElement(connected_react_router_1.ConnectedRouter, {\n  history: history\n}, React.createElement(App_1.default, null))), rootElement);\nregisterServiceWorker_1.default();","map":{"version":3,"sources":["index.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAA,CAAA,kCAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA,C,CAEA;;;AACA,IAAM,OAAO,GAAW,QAAQ,CAAC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyC,YAAzC,CAAsD,MAAtD,CAAxB;AACA,IAAM,OAAO,GAAY,SAAA,CAAA,oBAAA,EAAzB;AACA,IAAM,WAAW,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAApB,C,CAEA;;AACA,IAAM,KAAK,GAAG,gBAAA,CAAA,OAAA,CAAe,OAAf,CAAd;AAEA,QAAQ,CAAC,MAAT,CACI,KAAA,CAAA,aAAA,CAAC,aAAA,CAAA,QAAD,EAAS;AAAC,EAAA,KAAK,EAAE;AAAR,CAAT,EACI,KAAA,CAAA,aAAA,CAAC,wBAAA,CAAA,eAAD,EAAgB;AAAC,EAAA,OAAO,EAAE;AAAV,CAAhB,EACI,KAAA,CAAA,aAAA,CAAC,KAAA,CAAA,OAAD,EAAI,IAAJ,CADJ,CADJ,CADJ,EAMI,WANJ;AAQA,uBAAA,CAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"bootstrap/dist/css/bootstrap.css\");\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar connected_react_router_1 = require(\"connected-react-router\");\r\nvar history_1 = require(\"history\");\r\nvar configureStore_1 = require(\"./store/configureStore\");\r\nvar App_1 = require(\"./components/App\");\r\nvar registerServiceWorker_1 = require(\"./registerServiceWorker\");\r\n// Create browser history to use in the Redux store\r\nvar baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nvar history = history_1.createBrowserHistory();\r\nvar rootElement = document.getElementById('root');\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nvar store = configureStore_1.default(history);\r\nReactDOM.render(React.createElement(react_redux_1.Provider, { store: store },\r\n    React.createElement(connected_react_router_1.ConnectedRouter, { history: history },\r\n        React.createElement(App_1.default, null))), rootElement);\r\nregisterServiceWorker_1.default();\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}