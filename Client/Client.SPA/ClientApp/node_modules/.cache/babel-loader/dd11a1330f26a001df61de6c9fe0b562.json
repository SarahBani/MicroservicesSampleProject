{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire(\"bootstrap/dist/css/bootstrap.css\"); //import 'react-app-polyfill/ie11'\n\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar redux_saga_1 = require(\"redux-saga\");\n\nvar connected_react_router_1 = require(\"connected-react-router\");\n\nvar App_1 = require(\"./components/App\");\n\nvar registerServiceWorker_1 = require(\"./registerServiceWorker\");\n\nvar sagas_1 = require(\"./store/sagas\");\n\nvar browserHistory_1 = require(\"./browserHistory\");\n\nvar store_1 = require(\"./store\");\n\nvar rootElement = document.getElementById('root');\nvar sagaMiddleware = redux_saga_1.default(); //const rootReducer = combineReducers({\n//    common: commonReducer,\n//    auth: authReducer,\n//    //location: locationReducer,\n//    bank: bankReducer,\n//    //upload: uploadReducer\n//    router: connectRouter(browserHistory)\n//});\n//declare global {\n//    interface Window {\n//        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n//    }\n//}\n//export const composeEnhancers =\n//    (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n//// Get the application-wide store instance, prepopulating with state from the server where available.\n////const store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n//const store = configureStore();\n\nsagaMiddleware.run(sagas_1.watchAuth); //sagaMiddleware.run(watchLocation);\n\nsagaMiddleware.run(sagas_1.watchBank);\nReactDOM.render(React.createElement(react_redux_1.Provider, {\n  store: store_1.store\n}, React.createElement(connected_react_router_1.ConnectedRouter, {\n  history: browserHistory_1.browserHistory\n}, React.createElement(App_1.default, null))), rootElement);\nregisterServiceWorker_1.default();","map":{"version":3,"sources":["index.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAA,CAAA,kCAAA,CAAA,C,CACA;;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAGA,IAAA,KAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAIA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAM,WAAW,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAApB;AAEA,IAAM,cAAc,GAAG,YAAA,CAAA,OAAA,EAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA,cAAc,CAAC,GAAf,CAAmB,OAAA,CAAA,SAAnB,E,CACA;;AACA,cAAc,CAAC,GAAf,CAAmB,OAAA,CAAA,SAAnB;AAEA,QAAQ,CAAC,MAAT,CACI,KAAA,CAAA,aAAA,CAAC,aAAA,CAAA,QAAD,EAAS;AAAC,EAAA,KAAK,EAAE,OAAA,CAAA;AAAR,CAAT,EACI,KAAA,CAAA,aAAA,CAAC,wBAAA,CAAA,eAAD,EAAgB;AAAC,EAAA,OAAO,EAAE,gBAAA,CAAA;AAAV,CAAhB,EACI,KAAA,CAAA,aAAA,CAAC,KAAA,CAAA,OAAD,EAAI,IAAJ,CADJ,CADJ,CADJ,EAMI,WANJ;AAQA,uBAAA,CAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"bootstrap/dist/css/bootstrap.css\");\r\n//import 'react-app-polyfill/ie11'\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar redux_saga_1 = require(\"redux-saga\");\r\nvar connected_react_router_1 = require(\"connected-react-router\");\r\nvar App_1 = require(\"./components/App\");\r\nvar registerServiceWorker_1 = require(\"./registerServiceWorker\");\r\nvar sagas_1 = require(\"./store/sagas\");\r\nvar browserHistory_1 = require(\"./browserHistory\");\r\nvar store_1 = require(\"./store\");\r\nvar rootElement = document.getElementById('root');\r\nvar sagaMiddleware = redux_saga_1.default();\r\n//const rootReducer = combineReducers({\r\n//    common: commonReducer,\r\n//    auth: authReducer,\r\n//    //location: locationReducer,\r\n//    bank: bankReducer,\r\n//    //upload: uploadReducer\r\n//    router: connectRouter(browserHistory)\r\n//});\r\n//declare global {\r\n//    interface Window {\r\n//        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n//    }\r\n//}\r\n//export const composeEnhancers =\r\n//    (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n//// Get the application-wide store instance, prepopulating with state from the server where available.\r\n////const store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n//const store = configureStore();\r\nsagaMiddleware.run(sagas_1.watchAuth);\r\n//sagaMiddleware.run(watchLocation);\r\nsagaMiddleware.run(sagas_1.watchBank);\r\nReactDOM.render(React.createElement(react_redux_1.Provider, { store: store_1.store },\r\n    React.createElement(connected_react_router_1.ConnectedRouter, { history: browserHistory_1.browserHistory },\r\n        React.createElement(App_1.default, null))), rootElement);\r\nregisterServiceWorker_1.default();\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}